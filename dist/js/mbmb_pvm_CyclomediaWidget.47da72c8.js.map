{"version":3,"sources":["webpack:///./node_modules/@philly/vue-mapping/src/cyclomedia/Widget.vue?b246","webpack:///node_modules/@philly/vue-mapping/src/cyclomedia/Widget.vue","webpack:///./node_modules/@philly/vue-mapping/src/cyclomedia/Widget.vue?aef8","webpack:///./node_modules/@philly/vue-mapping/src/cyclomedia/Widget.vue","webpack:///./node_modules/@philly/vue-mapping/src/cyclomedia/Widget.vue?6fa2"],"names":["render","_vm","this","_h","$createElement","_c","_self","class","cycloContainerClass","attrs","id","isMobileOrTablet","popoutAble","style","right","popoutPosition","on","click","popoutClicked","staticClass","icon","_e","ref","staticRenderFns","Widgetvue_type_script_lang_js_","name","data","docWidth","divWidth","props","computed","$store","state","fullScreenMapEnabled","answer","$config","cyclomedia","cyclomediaInitialized","initialized","cyclomediaActive","active","pictometryActive","pictometry","locForCyclo","geocodeData","geocode","map","geometry","coordinates","latLngFromMap","mapCenter","center","navBarOpen","projection4326","projection2272","watch","setDivWidth","newCoords","setNewLocation","is_array_default","lat","lng","_this","StreetSmartApi","init","targetElement","$refs","cycloviewer","username","password","apiKey","srs","locale","addressSettings","database","then","err","window","addEventListener","newActiveStatus","updated","panoramaViewer","rotateRight","methods","document","body","clientWidth","el","getElementById","divStyle","getComputedStyle","parse_float_default","getPropertyValue","replace","$props","screenPercent","coords","viewerType","ViewerType","PANORAMA","coords2272","Object","lib","open","closable","maximizable","result","widget","i","length","getType","sendOrientationToStore","toggleNavbarExpanded","toggleButtonEnabled","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","overlays","next","done","overlay","value","visible","toggleOverlay","return","measurementAllowed","removeOverlay","orientation","yaw","xyz","getNavbarExpanded","commit","bind","catch","reason","hFov","xy","lnglat","getCenter","cyclomedia_Widgetvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_css_loader_index_js_ref_6_oneOf_1_1_vue_loader_lib_loaders_stylePostLoader_js_postcss_loader_src_index_js_ref_6_oneOf_1_2_cache_loader_dist_cjs_js_ref_0_0_vue_loader_lib_index_js_vue_loader_options_Widget_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_css_loader_index_js_ref_6_oneOf_1_1_vue_loader_lib_loaders_stylePostLoader_js_postcss_loader_src_index_js_ref_6_oneOf_1_2_cache_loader_dist_cjs_js_ref_0_0_vue_loader_lib_index_js_vue_loader_options_Widget_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"2JAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,MAAAL,KAAAM,oBAAAC,MAAA,CAAsCC,GAAA,oBAAwB,MAAAR,KAAAS,mBAAA,IAAAT,KAAAU,WAAAP,EAAA,OAA0EQ,MAAA,CAAQC,MAAAb,EAAAc,gBAA4BN,MAAA,CAASC,GAAA,cAAkBM,GAAA,CAAKC,MAAAf,KAAAgB,gBAA4B,CAAAb,EAAA,qBAA0Bc,YAAA,cAAAV,MAAA,CAAiCW,KAAA,wBAA4B,GAAAnB,EAAAoB,KAAAhB,EAAA,OAAyBiB,IAAA,cAAAH,YAAA,uBAAAV,MAAA,CAA4DC,GAAA,oBAC9fa,EAAA,0FCuBAC,EAAA,CACAC,KAAA,mBACAC,KAFA,WAGA,OACAC,SAAA,EACAC,SAAA,EACAb,eAAA,IAGAc,MAAA,kBACAC,SAAA,CACAnB,iBADA,WAEA,OAAAT,KAAA6B,OAAAC,MAAArB,kBAEAsB,qBAJA,WAKA,OAAA/B,KAAA6B,OAAAC,MAAAC,sBAEArB,WAPA,WAQA,IAAAsB,EAMA,OAJAA,GADA,IAAAhC,KAAAiC,QAAAC,WAAAxB,WAKAsB,GAEAG,sBAhBA,WAiBA,OAAAnC,KAAA6B,OAAAC,MAAAI,WAAAE,aAEAC,iBAnBA,WAoBA,OAAArC,KAAA6B,OAAAC,MAAAI,WAAAI,QAEAC,iBAtBA,WAuBA,OAAAvC,KAAA6B,OAAAC,MAAAU,WAAAF,QAEAhC,oBAzBA,WA0BA,OAAAN,KAAAuC,iBACA,sCAEA,uCAGAE,YAhCA,WAkCA,IAAAC,EAAA1C,KAAA6B,OAAAC,MAAAa,QAAAnB,KACAxB,KAAA6B,OAAAC,MAAAc,QACA,GAAAF,EACA,OAAAA,EAAAG,SAAAC,YAAA,GAAAJ,EAAAG,SAAAC,YAAA,KAGAC,cAxCA,WAyCA,OAAA/C,KAAA6B,OAAAC,MAAAI,WAAAa,eAEAC,UA3CA,WA4CA,OAAAhD,KAAA6B,OAAAC,MAAAc,IAAAK,QAEAC,WA9CA,WA+CA,OAAAlD,KAAA6B,OAAAC,MAAAI,WAAAgB,YAEAC,eAjDA,WAkDA,0DAEAC,eApDA,WAqDA,gMAMAC,MAAA,CACAtB,qBADA,WAEA/B,KAAAsD,eAEAb,YAJA,SAIAc,GAEAA,GACAvD,KAAAwD,eAAAD,IAGAR,cAVA,SAUAQ,GAEAvD,KAAAmC,wBAEAsB,IAAAF,GAEAvD,KAAAwD,eAAA,CAAAD,EAAA,GAAAA,EAAA,KAGAvD,KAAAwD,eAAA,CAAAD,EAAAG,IAAAH,EAAAI,QAOAxB,sBA1BA,WA0BA,IAAAyB,EAAA5D,KACA6D,eAAAC,KAAA,CACAC,cAAA/D,KAAAgE,MAAAC,YACAC,SAAAlE,KAAAiC,QAAAC,WAAAgC,SACAC,SAAAnE,KAAAiC,QAAAC,WAAAiC,SACAC,OAAApE,KAAAiC,QAAAC,WAAAkC,OAEAC,IAAA,YACAC,OAAA,QACAC,gBAAA,CACAD,OAAA,QACAE,SAAA,gBAEAC,KACA,WAEA,IAAA1B,EAAAa,EAAA/B,OAAAC,MAAAI,WAAAa,cACAa,EAAAJ,eAAA,CAAAT,EAAA,GAAAA,EAAA,MAEA,SAAA2B,MAIAC,OAAAC,iBAAA,SAAA5E,KAAAsD,cAEAjB,iBAnDA,SAmDAwC,GACA7E,KAAAsD,eACA,IAAAuB,GACA7E,KAAAwD,eAAAxD,KAAA+C,iBAOA+B,QAlIA,WAsIA9E,KAAAqC,kBACAsC,OAAAI,gBACAJ,OAAAI,eAAAC,YAAA,MAGAhF,KAAAsD,eAEA2B,QAAA,CACA3B,YADA,WAEA,IAAA7B,EAAAyD,SAAAC,KAAAC,YACApF,KAAAyB,WACA,IAKAO,EALAqD,EAAAH,SAAAI,eAAA,mBACAC,EAAAZ,OAAAa,iBAAAH,GACA3D,EAAA+D,IAAAF,EAAAG,iBAAA,SAAAC,QAAA,UACA3F,KAAA0B,WAIAM,EADAhC,KAAA+B,qBACAN,EAAAC,EAAA,KAEAD,KAAAzB,KAAA4F,OAAAC,cAAAnE,GAAA,KAGA1B,KAAAa,eAAAmB,GAGAwB,eAnBA,SAmBAsC,GAEA,GAAAA,EAAA,CAGA,IAAAC,EAAAlC,eAAAmC,WAAAC,SACAC,EAAAC,OAAAC,EAAA,KAAAD,CAAAnG,KAAAmD,eAAAnD,KAAAoD,eAAA,CAAA0C,EAAA,GAAAA,EAAA,KAGAjC,eAAAwC,KAAAH,EAAA,OAAAA,EAAA,IACAH,aACA1B,IAAA,YAEAU,eAAA,CACAuB,UAAA,EACAC,aAAA,KAEA9B,KACA,SAAA+B,GAEA,IAAAC,EAAAzG,KAEA,GAAAwG,EAAA,CACA,QAAAE,EAAA,EAAAA,EAAAF,EAAAG,OAAAD,IACAF,EAAAE,GAAAE,YAAA/C,eAAAmC,WAAAC,WAAAtB,OAAAI,eAAAyB,EAAAE,IAEAD,EAAAI,yBAGAlC,OAAAI,eAAA+B,qBAAAL,EAAAvD,YASAyB,OAAAI,eAAAgC,oBAAA,yBACApC,OAAAI,eAAAgC,oBAAA,8BAjBA,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAmBA,QAAAC,EAAAC,EAAAC,IAAA3C,OAAAI,eAAApD,MAAA4F,YAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,OAAAU,EAAAN,EAAAO,MAEA,uBAAAD,EAAAlH,KACA,IAAAkH,EAAAE,SACAjD,OAAAI,eAAA8C,cAAAH,IAvBA,MAAAhD,GAAAuC,GAAA,EAAAC,EAAAxC,EAAA,YAAAsC,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GA6BAlH,KAAAiC,QAAAC,WAAA6F,oBAAA,UAAA/H,KAAAiC,QAAAC,WAAA6F,qBACAlE,eAAAmE,cAAA,oBACArD,OAAAI,eAAAgC,oBAAA,wBAGApC,OAAAI,eAAAjE,GAAA,yBACA6D,OAAAI,eAAApD,MAAAsG,YAAAC,MAAAzB,EAAA5E,OAAAC,MAAAI,WAAA+F,YAAAC,KACAvD,OAAAI,eAAApD,MAAAsG,YAAAE,MAAA1B,EAAA5E,OAAAC,MAAAI,WAAA+F,YAAAE,IAGA1B,EAAAI,yBACAlC,OAAAI,eAAAqD,sBAAApI,KAAAkD,YACAuD,EAAA5E,OAAAwG,OAAA,0BAAA1D,OAAAI,eAAAqD,uBAIAzD,OAAAI,eAAAjE,GAAA,2BACA6D,OAAAI,eAAApD,MAAAsG,YAAAC,MAAAzB,EAAA5E,OAAAC,MAAAI,WAAA+F,YAAAC,KACAvD,OAAAI,eAAApD,MAAAsG,YAAAE,MAAA1B,EAAA5E,OAAAC,MAAAI,WAAA+F,YAAAE,IAGA1B,EAAAI,yBACAlC,OAAAI,eAAAqD,sBAAApI,KAAAkD,YACAuD,EAAA5E,OAAAwG,OAAA,0BAAA1D,OAAAI,eAAAqD,yBAIAE,KAAAtI,OACAuI,MACA,SAAAC,QAQA3B,uBA3GA,WA6GA7G,KAAA6B,OAAAwG,OAAA,mBAAA1D,OAAAI,eAAApD,MAAAsG,YAAAC,KACAlI,KAAA6B,OAAAwG,OAAA,oBAAA1D,OAAAI,eAAApD,MAAAsG,YAAAQ,MACA,IAAAC,EAAA,CAAA/D,OAAAI,eAAApD,MAAAsG,YAAAE,IAAA,GAAAxD,OAAAI,eAAApD,MAAAsG,YAAAE,IAAA,IACAQ,EAAAxC,OAAAC,EAAA,KAAAD,CAAAnG,KAAAoD,eAAApD,KAAAmD,eAAAuF,GAEA1I,KAAA6B,OAAAwG,OAAA,mBAAAM,IAEA3H,cApHA,WAqHA,IAAA4B,EAAA5C,KAAA6B,OAAAC,MAAAc,QACAK,EAAAL,EAAAgG,YACAjE,OAAA0B,KAAA,2BAAApD,EAAAS,IAAA,IAAAT,EAAAU,IAAA,UACA3D,KAAA6B,OAAAwG,OAAA,6BC7R6SQ,EAAA,0BCQ7SC,EAAgB3C,OAAA4C,EAAA,KAAA5C,CACd0C,EACA/I,EACAuB,GACF,EACA,KACA,KACA,MAIe2H,EAAA,WAAAF,6CCnBf,IAAAG,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAgaE,EAAG","file":"js/mbmb_pvm_CyclomediaWidget.47da72c8.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:this.cycloContainerClass,attrs:{\"id\":\"cyclo-container\"}},[(this.isMobileOrTablet === false && this.popoutAble === true)?_c('div',{style:({ right: _vm.popoutPosition }),attrs:{\"id\":\"inCycloDiv\"},on:{\"click\":this.popoutClicked}},[_c('font-awesome-icon',{staticClass:\"popout-icon\",attrs:{\"icon\":\"external-link-alt\"}})],1):_vm._e(),_c('div',{ref:\"cycloviewer\",staticClass:\"panoramaViewerWindow\",attrs:{\"id\":\"cycloviewer\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"cyclo-container\"\r\n       :class=\"this.cycloContainerClass\"\r\n  >\r\n  <!-- v-once -->\r\n    <div id=\"inCycloDiv\"\r\n         @click=\"this.popoutClicked\"\r\n         :style=\"{ right: popoutPosition }\"\r\n         v-if=\"this.isMobileOrTablet === false && this.popoutAble === true\"\r\n    >\r\n      <font-awesome-icon icon=\"external-link-alt\" class=\"popout-icon\" />\r\n    </div>\r\n    <div id=\"cycloviewer\"\r\n         ref=\"cycloviewer\"\r\n         class=\"panoramaViewerWindow\"\r\n    >\r\n    <!-- @mousedown=\"console.log('mouseup')\" -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import proj4 from 'proj4';\r\n\r\n  export default {\r\n    name: 'CyclomediaWidget',\r\n    data() {\r\n      return {\r\n        'docWidth': 0,\r\n        'divWidth': 0,\r\n        'popoutPosition': 0,\r\n      }\r\n    },\r\n    props: ['screenPercent'],\r\n    computed: {\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      popoutAble() {\r\n        let answer;\r\n        if (this.$config.cyclomedia.popoutAble === false) {\r\n          answer = false\r\n        } else {\r\n          answer = true\r\n        }\r\n        return answer\r\n      },\r\n      cyclomediaInitialized() {\r\n        return this.$store.state.cyclomedia.initialized;\r\n      },\r\n      cyclomediaActive() {\r\n        return this.$store.state.cyclomedia.active;\r\n      },\r\n      pictometryActive() {\r\n        return this.$store.state.pictometry.active;\r\n      },\r\n      cycloContainerClass() {\r\n        if (this.pictometryActive) {\r\n          return 'medium-16 large-16 columns mb-panel'\r\n        } else {\r\n          return 'medium-24 large-24 columns mb-panel'\r\n        }\r\n      },\r\n      locForCyclo() {\r\n        // console.log('computing locForCyclo');\r\n        const geocodeData = this.$store.state.geocode.data;\r\n        const map = this.$store.state.map.map;\r\n        if (geocodeData) {\r\n          return [geocodeData.geometry.coordinates[1], geocodeData.geometry.coordinates[0]];\r\n        }\r\n      },\r\n      latLngFromMap() {\r\n        return this.$store.state.cyclomedia.latLngFromMap;\r\n      },\r\n      mapCenter() {\r\n        return this.$store.state.map.center;\r\n      },\r\n      navBarOpen() {\r\n        return this.$store.state.cyclomedia.navBarOpen;\r\n      },\r\n      projection4326() {\r\n        return \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\";\r\n      },\r\n      projection2272() {\r\n        return \"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +datum=NAD83 +to_meter=0.3048006096012192 +no_defs\";\r\n      },\r\n      // surfaceCursorOn() {\r\n      //   return this.$store.state.cyclomedia.surfaceCursorOn;\r\n      // }\r\n    },\r\n    watch: {\r\n      fullScreenMapEnabled() {\r\n        this.setDivWidth();\r\n      },\r\n      locForCyclo(newCoords) {\r\n        // console.log('watch locForCyclo is firing, setNewLocation running with newCoords:', newCoords);\r\n        if (newCoords) {\r\n          this.setNewLocation(newCoords);\r\n        }\r\n      },\r\n      latLngFromMap(newCoords) {\r\n        // console.log('watch latLngFromMap is firing, setNewLocation running with newCoords:', newCoords);\r\n        if (this.cyclomediaInitialized) {\r\n\r\n          if (Array.isArray(newCoords)) {\r\n            // console.log('it is an array');\r\n            this.setNewLocation([newCoords[1], newCoords[0]]);\r\n          } else {\r\n            // console.log('it is not an array');\r\n            this.setNewLocation([newCoords.lat, newCoords.lng]);\r\n          }\r\n        }\r\n      },\r\n      // docWidthComp() {\r\n      //   console.log('docWidth changed');\r\n      // }\r\n      cyclomediaInitialized() {\r\n        StreetSmartApi.init({\r\n          targetElement: this.$refs.cycloviewer,\r\n          username: this.$config.cyclomedia.username,\r\n          password: this.$config.cyclomedia.password,\r\n          apiKey: this.$config.cyclomedia.apiKey,\r\n          // srs: 'EPSG:4326',\r\n          srs: 'EPSG:2272',\r\n          locale: 'en-us',\r\n          addressSettings: {\r\n            locale: 'en-us',\r\n            database: 'CMDatabase'\r\n          }\r\n        }).then (\r\n          () => {\r\n            // get map center and set location\r\n            const latLngFromMap = this.$store.state.cyclomedia.latLngFromMap;\r\n            this.setNewLocation([latLngFromMap[0], latLngFromMap[1]]);\r\n          },\r\n          err => {\r\n            // console.log('Api: init: failed. Error: ', err);\r\n          }\r\n        );\r\n        window.addEventListener('resize', this.setDivWidth);\r\n      },\r\n      cyclomediaActive(newActiveStatus) {\r\n        this.setDivWidth();\r\n        if (newActiveStatus === true) {\r\n          this.setNewLocation(this.latLngFromMap);\r\n        }\r\n      },\r\n      // pictometryActive() {\r\n      //   this.setDivWidth();\r\n      // }\r\n    },\r\n    updated() {\r\n      // console.log('cyclomedia updated running');\r\n      // TODO find a better way to get the image to update and not be stretched\r\n      // const viewer = this.$store.state.cyclomedia.viewer;\r\n      if (this.cyclomediaActive) {\r\n        if (window.panoramaViewer) {\r\n          window.panoramaViewer.rotateRight(0.0000001);\r\n        }\r\n      }\r\n      this.setDivWidth();\r\n    },\r\n    methods: {\r\n      setDivWidth() {\r\n        const docWidth = document.body.clientWidth;\r\n        this.docWidth = docWidth;\r\n        const el = document.getElementById('cyclo-container');\r\n        const divStyle = window.getComputedStyle(el);\r\n        const divWidth = parseFloat(divStyle.getPropertyValue('width').replace('px', ''));\r\n        this.divWidth = divWidth;\r\n        // console.log('setDivWidth is running, docWidth:', docWidth, 'divWidth', divWidth);\r\n        let answer;\r\n        if (this.fullScreenMapEnabled) {\r\n          answer = docWidth - divWidth + 'px';\r\n        } else {\r\n          answer = docWidth - (docWidth/this.$props.screenPercent + divWidth) + 'px';\r\n        }\r\n        // console.log('setDivWidth, answer:', answer);\r\n        this.popoutPosition = answer;\r\n        // return width;\r\n      },\r\n      setNewLocation(coords) {\r\n        // console.log('cyclomedia setNewLocation is running using', coords);\r\n        if (!coords) {\r\n          return;\r\n        }\r\n        const viewerType = StreetSmartApi.ViewerType.PANORAMA;\r\n        const coords2272 = proj4(this.projection4326, this.projection2272, [coords[1], coords[0]]);\r\n        // StreetSmartApi.open(center.lng + ',' + center.lat, {\r\n        // StreetSmartApi.open(coords[1] + ',' + coords[0], {\r\n        StreetSmartApi.open(coords2272[0] + ',' + coords2272[1], {\r\n          viewerType: viewerType,\r\n          srs: 'EPSG:2272',\r\n          // srs: 'EPSG:4326',\r\n          panoramaViewer: {\r\n            closable: false,\r\n            maximizable: false,\r\n          }\r\n        }).then (\r\n          function(result) {\r\n            // console.log('StreetSmartApi2, result:', result);\r\n            const widget = this;\r\n            // console.log('Created component through API:', result);\r\n            if (result) {\r\n              for (let i =0; i < result.length; i++) {\r\n                if(result[i].getType() === StreetSmartApi.ViewerType.PANORAMA) window.panoramaViewer = result[i];\r\n              }\r\n              widget.sendOrientationToStore();\r\n\r\n              // StreetSmartApi.removeOverlay()\r\n              window.panoramaViewer.toggleNavbarExpanded(widget.navBarOpen);\r\n              // if (widget.isMobileOrTablet) {\r\n              // console.log('about to remove surfaceCursorLayer');\r\n              // StreetSmartApi.removeOverlay('surfaceCursorLayer');\r\n              // console.log('removed surfaceCursorLayer');\r\n              // }\r\n\r\n              // StreetSmartApi.removeOverlay('measurementLayer');\r\n              // window.panoramaViewer.toggleButtonEnabled('panorama.measure', false);\r\n              window.panoramaViewer.toggleButtonEnabled('panorama.elevation', false);\r\n              window.panoramaViewer.toggleButtonEnabled('panorama.reportBlurring', false);\r\n\r\n              for (let overlay of window.panoramaViewer.props.overlays) {\r\n                // console.log('overlay:', overlay);\r\n                if (overlay.id === 'surfaceCursorLayer') {\r\n                  if (overlay.visible === true) {\r\n                    window.panoramaViewer.toggleOverlay(overlay);\r\n                    // overlay.visible = false;\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (!this.$config.cyclomedia.measurementAllowed || this.$config.cyclomedia.measurementAllowed === 'false') {\r\n                StreetSmartApi.removeOverlay('measurementLayer');\r\n                window.panoramaViewer.toggleButtonEnabled('panorama.measure', false);\r\n              }\r\n\r\n              window.panoramaViewer.on('VIEW_CHANGE', function() {\r\n                if (window.panoramaViewer.props.orientation.yaw !== widget.$store.state.cyclomedia.orientation.yaw ||\r\n                    window.panoramaViewer.props.orientation.xyz !== widget.$store.state.cyclomedia.orientation.xyz\r\n                ) {\r\n                  // console.log('on VIEW_CHANGE fired with yaw change', window.panoramaViewer.props.orientation);\r\n                  widget.sendOrientationToStore();\r\n                } else if (window.panoramaViewer.getNavbarExpanded() !== this.navBarOpen) {\r\n                  widget.$store.commit('setCyclomediaNavBarOpen', window.panoramaViewer.getNavbarExpanded());\r\n                }\r\n              })\r\n\r\n              window.panoramaViewer.on('VIEW_LOAD_END', function() {\r\n                if (window.panoramaViewer.props.orientation.yaw !== widget.$store.state.cyclomedia.orientation.yaw ||\r\n                    window.panoramaViewer.props.orientation.xyz !== widget.$store.state.cyclomedia.orientation.xyz\r\n                ) {\r\n                  // console.log('on VIEW_CHANGE fired with yaw change', window.panoramaViewer.props.orientation);\r\n                  widget.sendOrientationToStore();\r\n                } else if (window.panoramaViewer.getNavbarExpanded() !== this.navBarOpen) {\r\n                  widget.$store.commit('setCyclomediaNavBarOpen', window.panoramaViewer.getNavbarExpanded());\r\n                }\r\n              })\r\n            }\r\n          }.bind(this)\r\n        ).catch(\r\n          function(reason) {\r\n            // console.log('Failed to create component(s) through API: ' + reason);\r\n          }\r\n        );\r\n\r\n        // const viewer = this.$store.state.cyclomedia.viewer;\r\n        // viewer.openByCoordinate(coords);\r\n      },\r\n      sendOrientationToStore() {\r\n        // console.log('sendOrientationToStore, yaw:', window.panoramaViewer.props.orientation.yaw);\r\n        this.$store.commit('setCyclomediaYaw', window.panoramaViewer.props.orientation.yaw)\r\n        this.$store.commit('setCyclomediaHFov', window.panoramaViewer.props.orientation.hFov)\r\n        const xy = [window.panoramaViewer.props.orientation.xyz[0], window.panoramaViewer.props.orientation.xyz[1]];\r\n        const lnglat = proj4(this.projection2272, this.projection4326, xy);\r\n        // console.log('xy:', xy, 'lnglat', lnglat);\r\n        this.$store.commit('setCyclomediaXyz', lnglat);\r\n      },\r\n      popoutClicked() {\r\n        const map = this.$store.state.map.map;\r\n        const center = map.getCenter();\r\n        window.open('//cyclomedia.phila.gov/?' + center.lat + '&' + center.lng, '_blank');\r\n        this.$store.commit('setCyclomediaActive', false);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n\r\n#cyclo-container {\r\n  padding: 0px;\r\n  height: 50%;\r\n  /* display: none; */\r\n}\r\n\r\n@media screen and (min-width: 46.875em) {\r\n  #cyclo-container {\r\n    display: block;\r\n  }\r\n}\r\n\r\n#inCycloDiv {\r\n  /* position: absolute; */\r\n  position: absolute;\r\n  /* top: 0px; */\r\n  right: 0px;\r\n  /* float: right; */\r\n  background-color: white;\r\n  border: 0px solid;\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor:pointer;\r\n  z-index: 10;\r\n}\r\n\r\n.popout-icon {\r\n  margin-top: 8.5px;\r\n  font-size: 15px;\r\n  margin-left: 8.5px;\r\n}\r\n\r\n.panoramaViewerWindow {\r\n  display: block;\r\n  width: 100%;\r\n  height:100%;\r\n}\r\n\r\n@media screen and (max-width: 46.875em) {\r\n  .cyclo-container {\r\n    /* display: none; */\r\n  }\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./Widget.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./Widget.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Widget.vue?vue&type=template&id=6fab1472&\"\nimport script from \"./Widget.vue?vue&type=script&lang=js&\"\nexport * from \"./Widget.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Widget.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../css-loader/index.js??ref--6-oneOf-1-1!../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./Widget.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../css-loader/index.js??ref--6-oneOf-1-1!../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./Widget.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}