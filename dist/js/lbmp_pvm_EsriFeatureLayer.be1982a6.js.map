{"version":3,"sources":["webpack:///./node_modules/@philly/vue-mapping/src/esri-leaflet/FeatureLayer.vue","webpack:///node_modules/@philly/vue-mapping/src/esri-leaflet/FeatureLayer.vue","webpack:///./node_modules/@philly/vue-mapping/src/esri-leaflet/FeatureLayer.vue?f040"],"names":["render","staticRenderFns","FeatureLayervue_type_script_lang_js_","name","props","created","leafletElement","this","$leafletElement","createLeafletElement","console","log","map","$store","state","addTo","destroyed","_map","removeLayer","h","methods","assign_default","$props","layerName","getPane","createPane","style_","style","markerType","pointToLayer","geojson","latlng","leaflet_src","pane","color","fillColor","fillOpacity","weight","radius","interactive","esri_leaflet_debug","parentMounted","parent","esri_leaflet_FeatureLayervue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"wIAAAA,EAAAC,+CCUAC,EAAA,CACAC,KAAA,mBACAC,MAAA,CACA,MACA,UACA,UACA,SACA,YACA,QACA,YACA,cACA,SACA,SACA,aACA,SACA,eAEAC,QAjBA,WAkBA,IAAAC,EAAAC,KAAAC,gBAAAD,KAAAE,uBACAC,QAAAC,IAAA,kBAAAL,GACA,IAAAM,EAAAL,KAAAM,OAAAC,MAAAF,QAEAA,GACAN,EAAAS,MAAAH,IAGAI,UA1BA,WA2BAT,KAAAC,gBAAAS,KAAAC,YAAAX,KAAAC,kBAIAR,OA/BA,SA+BAmB,KAGAC,QAAA,CACAX,qBADA,WAEA,IAAAL,EAAAiB,IAAA,GAAAd,KAAAe,QAEAV,EAAAL,KAAAM,OAAAC,MAAAF,QACAW,EAAAnB,EAAAmB,UACAX,EAAAY,QAAAD,IACAX,EAAAa,WAAAF,GANA,IAUAG,EAAAtB,EAAAsB,OAIA,UAHAtB,EAAAsB,OACAtB,EAAAuB,MAAAD,EAEA,iBAAAtB,EAAAwB,WAAA,CACA,IAAAC,EAAA,SAAAC,EAAAC,GACA,OAAAC,EAAA,gBAAAD,EAAA,CACAE,KAAAV,EACAW,MAAA9B,EAAA8B,MACAC,UAAA/B,EAAA+B,UACAC,YAAAhC,EAAAgC,YACAC,OAAAjC,EAAAiC,OACAC,OAAAlC,EAAAkC,OACAC,YAAAnC,EAAAmC,eAGAnC,EAAAyB,eAGA,WAAAW,EAAA,gBAAApC,IAEAqC,cAhCA,SAgCAC,GACA,IAAA9B,EAAA8B,EAAAlC,gBACAD,KAAAC,gBAAAO,MAAAH,MC9EmT+B,EAAA,cFOnTC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACF3C,EACAC,GACA,EACA,KACA,KACA,MAIe8C,EAAA,WAAAH","file":"js/lbmp_pvm_EsriFeatureLayer.be1982a6.js","sourcesContent":["var render, staticRenderFns\nimport script from \"./FeatureLayer.vue?vue&type=script&lang=js&\"\nexport * from \"./FeatureLayer.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!-- <template>\r\n  <opacity-slider :layer=\"this.$leafletElement\"\r\n                  :position=\"'topleft'\"\r\n  />\r\n</template> -->\r\n<script>\r\n  import * as L from 'leaflet';\r\n  import { featureLayer as FeatureLayer } from 'esri-leaflet';\r\n\r\n  // min and max zooms are not handled by esri leaflet, but are handled by vue\r\n  export default {\r\n    name: 'EsriFeatureLayer',\r\n    props: [\r\n      'url',\r\n      'minZoom',\r\n      'maxZoom',\r\n      'zIndex',\r\n      'layerName',\r\n      'color',\r\n      'fillColor',\r\n      'fillOpacity',\r\n      'weight',\r\n      'style_',\r\n      'markerType',\r\n      'radius',\r\n      'interactive',\r\n    ],\r\n    created() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      console.log('leafletElement:', leafletElement);\r\n      const map = this.$store.state.map.map;\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n      }\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    // we don't actually render anything, but need to define either a template\r\n    // or a render function\r\n    render(h) {\r\n      return;\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const props = Object.assign({}, this.$props);\r\n\r\n        const map = this.$store.state.map.map;\r\n        const layerName = props.layerName\r\n        if (!map.getPane(layerName)) {\r\n          map.createPane(layerName);\r\n        }\r\n\r\n        // remove underscore from style_ prop. `style` is a vue reserved word.\r\n        const { style_ } = props;\r\n        delete props.style_;\r\n        props.style = style_;\r\n\r\n        if (props.markerType === 'circleMarker') {\r\n          let pointToLayer = function (geojson, latlng) {\r\n            return L.circleMarker(latlng, {\r\n              pane: layerName,\r\n              color: props.color,\r\n              fillColor: props.fillColor,\r\n              fillOpacity: props.fillOpacity,\r\n              weight: props.weight,\r\n              radius: props.radius,\r\n              interactive: props.interactive,\r\n            });\r\n          }\r\n          props.pointToLayer = pointToLayer;\r\n        }\r\n\r\n        return new FeatureLayer(props);\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n</style>\r\n","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./FeatureLayer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./FeatureLayer.vue?vue&type=script&lang=js&\""],"sourceRoot":""}