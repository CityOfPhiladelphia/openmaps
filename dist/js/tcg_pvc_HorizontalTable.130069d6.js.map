{"version":3,"sources":["webpack:///./node_modules/@philly/vue-comps/src/components/TopicComponent.vue","webpack:///node_modules/@philly/vue-mapping/src/esri-leaflet/TopicComponent.vue","webpack:///./node_modules/@philly/vue-comps/src/components/TopicComponent.vue?ecc0"],"names":["render","staticRenderFns","TopicComponentvue_type_script_lang_js_","props","slots","type","Object","default","options","item","beforeCreate","created","computed","nullValue","this","methods","evaluateSlot","valOrGetter","_this","transforms","arguments","length","undefined","val","valOrGetterType","esm_typeof","state","$store","controller","$controller","getter","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","transformKey","value","transform","$config","globals","globalKeys","keys_default","window","filter","key","includes","reduce","obj","fn","_iterator","get_iterator_default","next","done","err","return","components_TopicComponentvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"mJAAAA,EAAAC,wDCCAC,EAAA,CAEAC,MAAA,CACAC,MAAA,CACAC,KAAAC,OACAC,QAAA,sBAEAC,QAAA,CACAH,KAAAC,OACAC,QAAA,sBAEAE,KAAA,CACAJ,KAAAC,OACAC,QAAA,uBAGAG,aAhBA,aAmBAC,QAnBA,aAsBAC,SAAA,CACAC,UADA,WAEA,IAAAL,EAAAM,KAAAN,SAAA,GACA,OAAAA,EAAAK,YAGAE,QAAA,CACAC,aADA,SACAC,GAAA,IAAAC,EAAAJ,KAAAK,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAAAP,EAAAO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAGA,IAAAH,EACA,OAAAA,EAGA,IACAM,EADAC,EAAAlB,OAAAmB,EAAA,KAAAnB,CAAAW,GAIA,gBAAAO,EAAA,CACA,IAAAE,EAAAZ,KAAAa,OAAAD,MACAE,EAAAd,KAAAe,YACAC,EAAAb,EAOAR,EAAAK,KAAAL,KAOAc,EADAd,EACAqB,EAAAJ,EAAAjB,EAAAmB,GAGAE,EAAAJ,QAIAH,EAAAN,EAIA,QAAAM,QAEA,IAAAA,EACA,OAAAV,EA1CA,IAAAkB,GAAA,EAAAC,GAAA,EAAAC,OAAAX,EAAA,IA8CA,IA9CA,IA8CAY,EA9CAC,EAAA,eA8CAC,EA9CAF,EAAAG,MAgDAC,EAAApB,EAAAqB,QAAApB,WAAAiB,GAEAI,OAAA,EACAC,EAAAH,EAAAE,QACAC,IACAD,EAAAE,IAAAC,QACAC,OAAA,SAAAC,GAAA,OAAAJ,EAAAK,SAAAD,KACAE,OAAA,SAAAC,EAAAH,GAEA,OADAG,EAAAH,GAAAF,OAAAE,GACAG,GACA,KAGA,IAAAC,EAAAX,YACAf,EAAA0B,EAAA1B,EAAAiB,IAhBAU,EAAAC,IAAAhC,KAAAY,GAAAG,EAAAgB,EAAAE,QAAAC,MAAAtB,GAAA,EAAAI,IA9CA,MAAAmB,GAAAtB,GAAA,EAAAC,EAAAqB,EAAA,YAAAvB,GAAA,MAAAmB,EAAAK,QAAAL,EAAAK,SAAA,WAAAvB,EAAA,MAAAC,GAiEA,OAAAV,KC/FqTiC,EAAA,cFOrTC,EAAgBnD,OAAAoD,EAAA,KAAApD,CACdkD,EACFxD,EACAC,GACA,EACA,KACA,KACA,MAIe0D,EAAA,KAAAF","file":"js/tcg_pvc_HorizontalTable.130069d6.js","sourcesContent":["var render, staticRenderFns\nimport script from \"./TopicComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./TopicComponent.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\n  export default {\r\n    // props: ['slots', 'options', 'item'],\r\n    props: {\r\n      'slots': {\r\n        type: Object,\r\n        default: function() { return {} }\r\n      },\r\n      'options': {\r\n        type: Object,\r\n        default: function() { return {} }\r\n      },\r\n      'item': {\r\n        type: Object,\r\n        default: function() { return {} }\r\n      },\r\n    },\r\n    beforeCreate() {\r\n      // console.log('TopicComponent.vue beforeCreate is running, this:', this);\r\n    },\r\n    created() {\r\n      // console.log('TopicComponent.vue created is running, this.$props.slots:', this.$props.slots);\r\n    },\r\n    computed: {\r\n      nullValue() {\r\n        const options = this.options || {};\r\n        return options.nullValue;\r\n      },\r\n    },\r\n    methods: {\r\n      evaluateSlot(valOrGetter, transforms = [], nullValue = '') {\r\n        // console.log('evaluateSlot is running, valOrGetter:', valOrGetter);\r\n        // check for null val/getter\r\n        if (!valOrGetter) {\r\n          return valOrGetter;\r\n        }\r\n\r\n        const valOrGetterType = typeof valOrGetter;\r\n        let val;\r\n\r\n        // fn\r\n        if (valOrGetterType === 'function') {\r\n          const state = this.$store.state;\r\n          const controller = this.$controller;\r\n          const getter = valOrGetter;\r\n\r\n          // const getterText = String(getter);\r\n          // const depsRe = /state(\\.\\w+)+/g;\r\n          // const depsText = getterText.match(depsRe);\r\n          // const deps = depsText.map(eval);\r\n\r\n          const item = this.item;\r\n          // console.log('in evaluateSlot, item:', item);\r\n\r\n          // if this comp is associated with an \"item\" (generally some object\r\n          // from a list of things, e.g. dor parcels), pass the item itself\r\n          // as well when evaluating\r\n          if (item) {\r\n            val = getter(state, item, controller);\r\n          } else {\r\n            // console.log('evaluateSlot, about to get value');\r\n            val = getter(state);\r\n            // console.log('state:', state, 'val:', val);\r\n          }\r\n        } else {\r\n          val = valOrGetter;\r\n        }\r\n\r\n        // format nulls but not falses\r\n        if (val === false) {\r\n\r\n        } else if (!val) {\r\n          return nullValue;\r\n        }\r\n\r\n        // apply transforms\r\n        for (let transformKey of transforms) {\r\n          // get transform definition from config by name\r\n          const transform = this.$config.transforms[transformKey];\r\n          // make object of (relevant) globals by filtering window object\r\n          let globals;\r\n          const globalKeys = transform.globals;\r\n          if (globalKeys) {\r\n            globals = Object.keys(window)\r\n                          .filter(key => globalKeys.includes(key))\r\n                          .reduce((obj, key) => {\r\n                              obj[key] = window[key];\r\n                              return obj;\r\n                          }, {});\r\n          }\r\n          // run transform\r\n          const fn = transform.transform;\r\n          val = fn(val, globals);\r\n        }\r\n\r\n        return val;\r\n      },\r\n\r\n      // not sure how children can use this. `this` isn't binding correctly at\r\n      // the time the child gets instantiated.\r\n      // getComputedProperties() {\r\n      //   const slots = this.slots;\r\n      //   return Object.keys(slots).reduce((o, key) => {\r\n      //     const valOrGetter = slots[key];\r\n      //     // wrap slot val/getter in evaluator fn\r\n      //     o[key] = () => {\r\n      //       this.evaluateSlot(valOrGetter);\r\n      //     }\r\n      //     return o;\r\n      //   }, {});\r\n      // }\r\n    },\r\n  };\r\n</script>\r\n","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./TopicComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./TopicComponent.vue?vue&type=script&lang=js&\""],"sourceRoot":""}