{"version":3,"sources":["webpack:///./node_modules/@philly/vue-mapping/src/util/svg-icon.js","webpack:///./node_modules/@philly/vue-mapping/src/util/triangle-icon.js","webpack:///./node_modules/@philly/vue-mapping/src/cyclomedia/SvgViewConeMarker.vue","webpack:///node_modules/@philly/vue-mapping/src/cyclomedia/SvgViewConeMarker.vue","webpack:///./node_modules/@philly/vue-mapping/src/cyclomedia/SvgViewConeMarker.vue?8ae6","webpack:///./node_modules/@philly/vue-mapping/src/cyclomedia/SvgViewConeMarker.vue?0c45"],"names":["SvgIcon","leaflet_src","extend","options","circleText","className","circleAnchor","circleColor","circleOpacity","circleFillColor","circleFillOpacity","circleRatio","circleWeight","color","fillColor","fillOpacity","fontColor","fontOpacity","fontSize","iconAnchor","iconSize","opacity","popupAnchor","weight","initialize","setOptions","this","Number","x","y","_createPath","_createCircle","html","_createSVG","cx","cy","radius","fill","replace","stroke","strokeWidth","circle","_createPathDescription","height","width","margin","startPoint","leftLine","rightLine","arc","d","pathDescription","path","text","_createText","style","svg","lineHeight","textColor","svg_icon","TriangleIcon","prototype","call","render","staticRenderFns","triangle_icon","SvgViewConeMarkervue_type_script_lang_js_","name","props","h","mounted","leafletElement","$leafletElement","createLeafletElement","map","$store","state","addTo","destroyed","_map","removeLayer","watch","rotationAngle","nextRotationAngle","latlng","nextLatLng","computed","coneCoords","hFovDegrees","hFov","scale","angle","Math","sin","PI","length","sqrt","methods","icon","parentMounted","parent","cyclomedia_SvgViewConeMarkervue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_css_loader_index_js_ref_6_oneOf_1_1_vue_loader_lib_loaders_stylePostLoader_js_postcss_loader_src_index_js_ref_6_oneOf_1_2_cache_loader_dist_cjs_js_ref_0_0_vue_loader_lib_index_js_vue_loader_options_SvgViewConeMarker_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_css_loader_index_js_ref_6_oneOf_1_1_vue_loader_lib_loaders_stylePostLoader_js_postcss_loader_src_index_js_ref_6_oneOf_1_2_cache_loader_dist_cjs_js_ref_0_0_vue_loader_lib_index_js_vue_loader_options_SvgViewConeMarker_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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","file":"js/lbmp_pvm_CyclomediaSvgViewConeMarker.48eb511a.js","sourcesContent":["// Based on:\r\n// https://github.com/iatkin/leaflet-svgicon\r\n// modified to support es6 imports\r\n\r\nimport * as L from 'leaflet';\r\n\r\nconst SvgIcon = L.DivIcon.extend({\r\n    options: {\r\n        \"circleText\": \"\",\r\n        \"className\": \"svg-icon\",\r\n        \"circleAnchor\": null, //defaults to [iconSize.x/2, iconSize.x/2]\r\n        \"circleColor\": null, //defaults to color\r\n        \"circleOpacity\": null, // defaults to opacity\r\n        \"circleFillColor\": \"rgb(255,255,255)\",\r\n        \"circleFillOpacity\": null, //default to opacity\r\n        \"circleRatio\": 0.5,\r\n        \"circleWeight\": null, //defaults to weight\r\n        \"color\": \"rgb(0,102,255)\",\r\n        \"fillColor\": null, // defaults to color\r\n        \"fillOpacity\": 0.4,\r\n        \"fontColor\": \"rgb(0, 0, 0)\",\r\n        \"fontOpacity\": \"1\",\r\n        \"fontSize\": null, // defaults to iconSize.x/4\r\n        \"iconAnchor\": null, //defaults to [iconSize.x/2, iconSize.y] (point tip)\r\n        \"iconSize\": L.point(32,48),\r\n        \"opacity\": 1,\r\n        \"popupAnchor\": null,\r\n        \"weight\": 2\r\n    },\r\n    initialize: function(options) {\r\n        options = L.Util.setOptions(this, options)\r\n\r\n        if (!options.circleAnchor) {\r\n            options.circleAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.x)/2)\r\n        }\r\n        if (!options.circleColor) {\r\n            options.circleColor = options.color\r\n        }\r\n        if (!options.circleFillOpacity) {\r\n            options.circleFillOpacity = options.opacity\r\n        }\r\n        if (!options.circleOpacity) {\r\n            options.circleOpacity = options.opacity\r\n        }\r\n        if (!options.circleWeight) {\r\n            options.circleWeight = options.weight\r\n        }\r\n        if (!options.fillColor) {\r\n            options.fillColor = options.color\r\n        }\r\n        if (!options.fontSize) {\r\n            options.fontSize = Number(options.iconSize.x/4)\r\n        }\r\n        if (!options.iconAnchor) {\r\n            options.iconAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.y))\r\n        }\r\n        if (!options.popupAnchor) {\r\n            options.popupAnchor = L.point(0, (-0.75)*(options.iconSize.y))\r\n        }\r\n\r\n        var path = this._createPath()\r\n        var circle = this._createCircle()\r\n\r\n        options.html = this._createSVG()\r\n    },\r\n    _createCircle: function() {\r\n        var cx = Number(this.options.circleAnchor.x)\r\n        var cy = Number(this.options.circleAnchor.y)\r\n        var radius = this.options.iconSize.x/2 * Number(this.options.circleRatio)\r\n        var fill = this.options.circleFillColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.circleFillOpacity + \")\")\r\n        var stroke = this.options.circleColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.circleOpacity + \")\")\r\n        var strokeWidth = this.options.circleWeight\r\n        var className = this.options.className + \"-circle\"\r\n\r\n        var circle = '<circle class=\"' + className + '\" cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius + '\" fill=\"' + fill + '\" stroke=\"' + stroke + '\" stroke-width=\"' + strokeWidth + '\"/>'\r\n\r\n        return circle\r\n    },\r\n    _createPathDescription: function() {\r\n        var height = Number(this.options.iconSize.y)\r\n        var width = Number(this.options.iconSize.x)\r\n        var weight = Number(this.options.weight)\r\n        var margin = weight / 2\r\n\r\n        var startPoint = \"M \" + margin + \" \" + (width/2) + \" \"\r\n        var leftLine = \"L \" + (width/2) + \" \" + (height - weight) + \" \"\r\n        var rightLine = \"L \" + (width - margin) + \" \" + (width/2) + \" \"\r\n        var arc = \"A \" + (width/4) + \" \" + (width/4) + \" 0 0 0 \" + margin + \" \" + (width/2) + \" Z\"\r\n\r\n        var d = startPoint + leftLine + rightLine + arc\r\n\r\n        return d\r\n    },\r\n    _createPath: function() {\r\n        var pathDescription = this._createPathDescription()\r\n        var strokeWidth = this.options.weight\r\n        var stroke = this.options.color.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.opacity + \")\")\r\n        var fill = this.options.fillColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.fillOpacity + \")\")\r\n        var className = this.options.className + \"-path\"\r\n\r\n        var path = '<path class=\"' + className + '\" d=\"' + pathDescription + '\" stroke-width=\"' + strokeWidth + '\" stroke=\"' + stroke + '\" fill=\"' + fill + '\"/>'\r\n\r\n        return path\r\n    },\r\n    _createSVG: function() {\r\n        var path = this._createPath()\r\n        var circle = this._createCircle()\r\n        var text = this._createText()\r\n        var className = this.options.className + \"-svg\"\r\n\r\n        var style = \"width:\" + this.options.iconSize.x + \"; height:\" + this.options.iconSize.y + \";\"\r\n\r\n        var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"' + className + '\" style=\"' + style + '\">' + path + circle + text + '</svg>'\r\n\r\n        return svg\r\n    },\r\n    _createText: function() {\r\n        var fontSize = this.options.fontSize + \"px\"\r\n        var lineHeight = Number(this.options.fontSize)\r\n\r\n        var x = Number(this.options.iconSize.x) / 2\r\n        var y = x + (lineHeight * 0.35) //35% was found experimentally\r\n        var circleText = this.options.circleText\r\n        var textColor = this.options.fontColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.fontOpacity + \")\")\r\n\r\n        var text = '<text text-anchor=\"middle\" x=\"' + x + '\" y=\"' + y + '\" style=\"font-size: ' + fontSize + '\" fill=\"' + textColor + '\">' + circleText + '</text>'\r\n\r\n        return text\r\n    }\r\n})\r\n\r\nexport default SvgIcon;\r\n\r\n// L.divIcon.svgIcon = function(options) {\r\n//     return new L.DivIcon.SVGIcon(options)\r\n// }\r\n\r\n// L.Marker.SVGMarker = L.Marker.extend({\r\n//     options: {\r\n//         \"iconFactory\": L.divIcon.svgIcon,\r\n//         \"iconOptions\": {}\r\n//     },\r\n//     initialize: function(latlng, options) {\r\n//         options = L.Util.setOptions(this, options)\r\n//         options.icon = options.iconFactory(options.iconOptions)\r\n//         this._latlng = latlng\r\n//     },\r\n//     onAdd: function(map) {\r\n//         L.Marker.prototype.onAdd.call(this, map)\r\n//     },\r\n//     setStyle: function(style) {\r\n//         if (this._icon) {\r\n//             var svg = this._icon.children[0]\r\n//             var iconBody = this._icon.children[0].children[0]\r\n//             var iconCircle = this._icon.children[0].children[1]\r\n//\r\n//             if (style.color && !style.iconOptions) {\r\n//                 var stroke = style.color.replace(\"rgb\",\"rgba\").replace(\")\", \",\"+this.options.icon.options.opacity+\")\")\r\n//                 var fill = style.color.replace(\"rgb\",\"rgba\").replace(\")\", \",\"+this.options.icon.options.fillOpacity+\")\")\r\n//                 iconBody.setAttribute(\"stroke\", stroke)\r\n//                 iconBody.setAttribute(\"fill\", fill)\r\n//                 iconCircle.setAttribute(\"stroke\", stroke)\r\n//\r\n//                 this.options.icon.fillColor = fill\r\n//                 this.options.icon.color = stroke\r\n//                 this.options.icon.circleColor = stroke\r\n//             }\r\n//             if (style.opacity) {\r\n//                 this.setOpacity(style.opacity)\r\n//             }\r\n//             if (style.iconOptions) {\r\n//                 if (style.color) { style.iconOptions.color = style.color }\r\n//                 iconOptions = L.Util.setOptions(this.options.icon, style.iconOptions)\r\n//                 this.setIcon(L.divIcon.svgIcon(iconOptions))\r\n//             }\r\n//         }\r\n//     }\r\n// })\r\n//\r\n// L.marker.svgMarker = function(latlng, options) {\r\n//     return new L.Marker.SVGMarker(latlng, options)\r\n// }\r\n","// L.DivIcon.SVGIcon.noCircleIcon = L.DivIcon.SVGIcon.extend({\r\n//     initialize: function(options) {\r\n//         options = L.Util.setOptions(this, options)\r\n//         options.circleAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.y)/2)\r\n//         options.circleRatio = 0;\r\n//         L.DivIcon.SVGIcon.prototype.initialize.call(this, options)\r\n//\r\n//         return options\r\n//     },\r\n// })\r\n\r\n// L.divIcon.svgIcon.noCircleIcon = function(options) {\r\n//     return new L.DivIcon.SVGIcon.NoCircleIcon(options)\r\n// }\r\n\r\n// L.Marker.SVGMarker.NoCircleMarker = L.Marker.SVGMarker.extend({\r\n//     options: {\r\n//         \"iconFactory\": L.divIcon.svgIcon.NoCircleIcon\r\n//     }\r\n// })\r\n//\r\n// L.marker.svgMarker.noCircleMarker = function(latlng, options) {\r\n//     return new L.Marker.SVGMarker.noCircleMarker(latlng, options)\r\n// }\r\n\r\nimport * as L from 'leaflet';\r\nimport SvgIcon from './svg-icon';\r\n\r\nconst TriangleIcon = SvgIcon.extend({\r\n  initialize: function(options) {\r\n    options = L.Util.setOptions(this, options);\r\n    const circleAnchor = L.point(Number(options.iconSize.x) / 2,\r\n                                 Number(options.iconSize.y) / 2);\r\n    options.circleAnchor = circleAnchor;\r\n    options.circleRatio = 0;\r\n    options.className = options.className + \"-noClick\";\r\n    SvgIcon.prototype.initialize.call(this, options);\r\n\r\n    return options;\r\n  },\r\n\r\n  _createPathDescription: function () {\r\n    const height = Number(this.options.iconSize.y);\r\n    const width = Number(this.options.iconSize.x);\r\n    const weight = Number(this.options.weight);\r\n    const margin = weight;\r\n\r\n    const startPoint = \"M \" + margin + \" \" + (0) + \" \";\r\n    const leftLine = \"L \" + (width / 2) + \" \" + (height - margin) + \" \";\r\n    const rightLine = \"L \" + (width - margin) + \" \" + (0) + \" Z\";\r\n    const d = startPoint + leftLine + rightLine;\r\n\r\n    return d;\r\n  }\r\n})\r\n\r\nexport default TriangleIcon;\r\n\r\n// L.divIcon.svgIcon.triangleIcon = function(options) {\r\n//     return new L.DivIcon.SVGIcon.TriangleIcon(options)\r\n// }\r\n\r\n// L.Marker.SVGMarker.TriangleMarker = L.Marker.SVGMarker.extend({\r\n//     options: {\r\n//         \"iconFactory\": L.divIcon.svgIcon.triangleIcon\r\n//     }\r\n// })\r\n//\r\n// L.marker.svgMarker.triangleMarker = function(latlng, options) {\r\n//     return new L.Marker.SVGMarker.TriangleMarker(latlng, options)\r\n// }\r\n","var render, staticRenderFns\nimport script from \"./SvgViewConeMarker.vue?vue&type=script&lang=js&\"\nexport * from \"./SvgViewConeMarker.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SvgViewConeMarker.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!--\r\n  wraps leaflet svg-icons as a vue component\r\n  https://github.com/iatkin/leaflet-svgicon\r\n-->\r\n\r\n<script>\r\n  import * as L from 'leaflet';\r\n  // import DivIcon from 'leaflet';\r\n  import TriangleIcon from '../util/triangle-icon';\r\n\r\n  export default {\r\n    name: 'SvgViewConeMarker',\r\n    props: [\r\n      'latlng',\r\n      'rotationAngle',\r\n      'hFov'\r\n    ],\r\n    render(h) {\r\n      // this.orientation;\r\n      return;\r\n    },\r\n    mounted() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      // console.log('WHO IT IS', leafletElement);\r\n      const map = this.$store.state.map.map;\r\n\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n      }\r\n    },\r\n    destroyed() {\r\n      // console.log('svgMarker destroyed fired, latlng is', this.latlng);\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    watch: {\r\n      rotationAngle(nextRotationAngle) {\r\n        // console.log('pngMarker orientation changed', nextRotationAngle);\r\n        this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n        const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n        const map = this.$store.state.map.map;\r\n\r\n        // REVIEW kind of hacky/not reactive?\r\n        if (map) {\r\n          leafletElement.addTo(map);\r\n        }\r\n      },\r\n      latlng(nextLatLng) {\r\n        // console.log('pngMarker orientation changed', nextRotationAngle);\r\n        this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n        const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n        const map = this.$store.state.map.map;\r\n\r\n        // REVIEW kind of hacky/not reactive?\r\n        if (map) {\r\n          leafletElement.addTo(map);\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      coneCoords() {\r\n        const hFovDegrees = this.hFov * (180/3.14159265359);\r\n        const scale = 50//options.scale;\r\n        const angle = hFovDegrees / 2.0;\r\n        const width = Math.sin(angle * Math.PI / 180);\r\n        const length = Math.sqrt(1.0 - width * width);\r\n        const coneCoords = [width * scale, length * scale];\r\n\r\n        return coneCoords;\r\n      },\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const coneCoords = this.coneCoords;\r\n        const icon = new TriangleIcon({\r\n          iconSize: L.point(this.coneCoords[0], this.coneCoords[1]),\r\n          iconAnchor: [this.coneCoords[0] / 2, this.coneCoords[1]],\r\n        });\r\n        return L.marker(this.latlng, {\r\n          icon: icon,\r\n          rotationAngle: this.rotationAngle,\r\n        });\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .svg-icon-noClick-svg {\r\n    pointer-events: none;\r\n  }\r\n\r\n  .svg-icon-noClick {\r\n    pointer-events: none;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./SvgViewConeMarker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./SvgViewConeMarker.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../css-loader/index.js??ref--6-oneOf-1-1!../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./SvgViewConeMarker.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../css-loader/index.js??ref--6-oneOf-1-1!../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./SvgViewConeMarker.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}