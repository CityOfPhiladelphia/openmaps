{"version":3,"sources":["webpack:///../src/util/is-mobile-device.js","webpack:///../src/util/merge-deep.js","webpack:///../src/store.js","webpack:///../src/util/config-mixin.js","webpack:///../src/components/TopicPanel.vue","webpack:///../src/components/markers-mixin.js","webpack:///../src/components/MapPanel.vue","webpack:///../src/components/Layerboard.vue","webpack:///../node_modules/@fortawesome/pro-solid-svg-icons/faInfoCircle.js","webpack:///../node_modules/@fortawesome/pro-solid-svg-icons/faCheckSquare.js","webpack:///../node_modules/@fortawesome/pro-solid-svg-icons/faFilter.js","webpack:///../node_modules/@fortawesome/pro-light-svg-icons/faSquare.js","webpack:///../src/main.js"],"names":["isMobileDevice","const","userAgent","navigator","vendor","window","opera","test","substr","isObject","item","Array","isArray","mergeDeep","target","source","let","output","Object","assign","keys","forEach","key","pvdStore","philaVueDatafetch","createStore","config","lb","state","isMobileOrTablet","fullScreenMapEnabled","bennyEndpoints","layers","layerUrls","inputLayerFilter","inputTagsFilter","map","scale","webMap","webMapUrlLayer","webMapActiveLayers","webMapDisplayedLayers","webMapLayersAndRest","intersectingFeatures","popupCoords","selectedPopupLayer","categories","selectedCategory","candidates","addressEntered","didToggleTopicsOn","shouldShowTopics","shouldShowMap","windowWidth","route","modals","open","getters","mutations","setIsMobileOrTablet","payload","setFullScreenMapEnabled","setCategories","setSelectedCategory","setSelectedPopupLayer","setIntersectingFeatures","setPopupCoords","setBennyEndpoints","setLocation","location","lat","lng","setWatchPositionOn","watchPositionOn","setLayerUrls","setInputLayerFilter","setInputTagsFilter","setMap","setWebMap","setWebMapUrlLayer","setWebMapActiveLayers","setWebMapDisplayedLayers","setWebMapLayersAndRest","setWebMapLayersOpacity","filter","layer","title","layerName","opacity","opa","setLegend","legend","setMapScale","setDidToggleTopicsOn","setShouldShowTopics","setShouldShowMap","setWindowWidth","setRoute","setDidToggleModal","name","setCandidates","setAddressEntered","mergeStore","pvcStore","store","pvmStore","center","zoom","pictometry","Vuex","Store","Vue","mixin","created","this","$config","use","document","e","head","getElementsByTagName","t","createElement","i","type","styleSheet","cssText","appendChild","createTextNode","TopicPanel","render","components","Checkbox","computed","$store","topicPanelContainerClass","currentWmLayers","currentLayers","tags","toLowerCase","includes","join","category","push","windowSize","methods","handleLayerFilterFormKeyup","input","value","commit","handleLayerFilterFormX","handleTagsFilterFormKeyup","handleTagsFilterFormX","didSelectCategory","selected","selectedIndex","preventEnter","keyCode","preventDefault","markers","geocodeGeom","addressMarker","coordinates","reverse","geocodeResult","properties","street_address","markerType","icon","prefix","shadow","size","locationMarker","latlng","radius","fillColor","color","weight","fillOpacity","MapPanel","mixins","markersMixin","cyclomediaMixin","pictometryMixin","Map_","Control","MapAddressInput","MapAddressCandidateList","EsriWebMap","EsriWebMapLayer","EsriTiledMapLayer","CircleMarker","VectorMarker","PngMarker","BasemapToggleControl","BasemapSelectControl","FullScreenMapToggleTab","LocationControl","PictometryButton","CyclomediaButton","CyclomediaRecordingCircle","SvgViewConeMarker","MeasureControl","ControlCorner","PopUp","PopUpContent","Polygon_","Polyline_","ModalAbout","mounted","$controller","appDidLoad","mapCenter","addressAutocompleteEnabled","addressAutocomplete","enabled","addressInputPosition","mapPanelContainerClass","cycloLatlng","cyclomedia","orientation","xyz","cycloRotationAngle","yaw","cycloHFov","hFov","shouldShowCyclomediaButton","shouldShowPictometryButton","shouldShowPopup","length","selectedPopupLayerGeometryType","feature","geometry","selectedPopupLayerCoordinates","selectedPopupLayerCoordinatesFlipped","flipCoords","flipCoordsArray","flipCoordsMultiPolygon","geolocationEnabled","geolocation","activeBasemap","shouldShowImagery","imagery","defaultBasemap","basemap","activeTiles","basemaps","tiledLayers","values","shouldShowImageryToggle","hasImageryBasemaps","imageryBasemaps","imageryYears","x","year","historicBasemaps","hasHistoricBasemaps","historicYears","geocode","data","picOrCycloActive","cyclomediaActive","pictometryActive","measureControlEnabled","defaultAddress","goToDefaultAddress","$cyclomediaRecordingsClient","CyclomediaRecordingsClient","recordingsUrl","username","password","watch","$nextTick","invalidateSize","coords","anArray","newArray","aMultiPolygon","newArrayArray","j","shouldShowFeatureLayer","rest","layerDefinition","minScale","drawingInfo","handleMapClick","getElementById","blur","handleButtonClick","handleMapMove","pictometryConfig","getCenter","getZoom","scales","updateCyclomediaRecordings","Layerboard","CyclomediaWidget","PictometryWidget","PictometryLayer","PictometryViewCone","PictometryPngMarker","addEventListener","handleWindowResize","axios","get","params","headers","X-Knack-Application-Id","X-Knack-REST-API-Key","then","response","records","record","field_12","url","field_25","split","url2","replace","field_13_raw","id","console","log","shouldLoadCyclomediaWidget","shouldLoadPictometryWidget","active","pictometryZoom","pictometryShowAddressMarker","geocodeData","ak","host","hostname","apiKey","pictometryDev","pictometryCity","pictometryCityDev","pictometryLocal","sk","secretKey","windowHeight","height","buttonMessage","nextValue","nextWidth","calculateShouldShowTopics","calculateShouldShowMap","toggleTopics","prevVal","smallScreen","notMobile","rootElement","rootWidth","getComputedStyle","getPropertyValue","rootWidthNum","parseInt","defineProperty","exports","ligatures","svgPathData","iconName","definition","add","faInfoCircle","faCheckSquare","faFilter","faSquare","controllerMixin","initOpenMaps","clientConfig","baseConfigUrl","baseConfig","baseConfigFn","eval","gatekeeperKey","configMixin","component","FontAwesomeIcon","vm","el","h","error","default"],"mappings":"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","file":"layerboard.js","sourcesContent":["export default function () {\r\n  const mobileOrTabletRegexA = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\r\n  const mobileOrTabletRegexB = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\r\n\r\n  // get the user agent and test against both regex patterns\r\n  const userAgent = (navigator.userAgent || navigator.vendor || window.opera || '');\r\n  const isMobileOrTablet = (mobileOrTabletRegexA.test(userAgent) ||\r\n                            mobileOrTabletRegexB.test(userAgent.substr(0,4)));\r\n\r\n  return isMobileOrTablet;\r\n};\r\n","// http://stackoverflow.com/a/37164538/676001\r\n\r\n// helper to verify that an item is an object\r\nexport function isObject(item) {\r\n  return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n};\r\n\r\n// merges n objects, deeply, immutably\r\nexport default function mergeDeep(target, source) {\r\n  let output = Object.assign({}, target);\r\n  if (isObject(target) && isObject(source)) {\r\n    Object.keys(source).forEach(key => {\r\n      if (isObject(source[key])) {\r\n        if (!(key in target))\r\n          Object.assign(output, { [key]: source[key] });\r\n        else\r\n          output[key] = mergeDeep(target[key], source[key]);\r\n      } else {\r\n        Object.assign(output, { [key]: source[key] });\r\n      }\r\n    });\r\n  }\r\n  return output;\r\n};\r\n","import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport isMobileDevice from './util/is-mobile-device';\r\nimport mergeDeep from './util/merge-deep';\r\nimport { pvmStore } from '@cityofphiladelphia/phila-vue-mapping';\r\nimport { pvcStore } from '@cityofphiladelphia/phila-vue-comps';\r\nimport philaVueDatafetch from '@cityofphiladelphia/phila-vue-datafetch'\r\nconst pvdStore = philaVueDatafetch.pvdStore\r\n\r\n// when you load vuex from a script tag this seems to happen automatically\r\nVue.use(Vuex);\r\n\r\n// function createStore(config, bennyEndpoints, bennyRepresentation) {\r\nfunction createStore(config) { //}, bennyEndpoints, bennyRepresentation) {\r\n  // const modals = pvdStore.createModals(config);\r\n\r\n  const initialState = {\r\n    isMobileOrTablet: isMobileDevice(),\r\n    fullScreenMapEnabled: false,\r\n    bennyEndpoints: {},\r\n    layers: {\r\n      layerUrls: {},\r\n      inputLayerFilter: '',\r\n      inputTagsFilter: '',\r\n    },\r\n    map: {\r\n      scale: null,\r\n      webMap: null,\r\n      webMapUrlLayer: null,\r\n      webMapActiveLayers: [],\r\n      webMapDisplayedLayers: [],\r\n      webMapLayersAndRest: [],\r\n      intersectingFeatures: [],\r\n      popupCoords: null,\r\n      selectedPopupLayer: null,\r\n      categories: [],\r\n      selectedCategory: '',\r\n    },\r\n    candidates: [],\r\n    addressEntered: null,\r\n    didToggleTopicsOn: false,\r\n    shouldShowTopics: true,\r\n    shouldShowMap: true,\r\n    windowWidth: 0,\r\n    route: null,\r\n    modals: {\r\n      keys: config.modals,\r\n      open: '',\r\n    },\r\n  };\r\n\r\n  const lb = {\r\n    state: initialState,\r\n    getters: {},\r\n    mutations: {\r\n      setIsMobileOrTablet(state, payload) {\r\n        state.isMobileOrTablet = payload;\r\n      },\r\n      setFullScreenMapEnabled(state, payload) {\r\n        state.fullScreenMapEnabled = payload;\r\n      },\r\n      setCategories(state, payload) {\r\n        state.map.categories = payload;\r\n      },\r\n      setSelectedCategory(state, payload) {\r\n        state.map.selectedCategory = payload;\r\n      },\r\n      setSelectedPopupLayer(state, payload) {\r\n        state.map.selectedPopupLayer = payload;\r\n      },\r\n      setIntersectingFeatures(state, payload) {\r\n        state.map.intersectingFeatures = payload;\r\n      },\r\n      setPopupCoords(state, payload) {\r\n        state.map.popupCoords = payload;\r\n      },\r\n      setBennyEndpoints(state, payload) {\r\n        state.bennyEndpoints = payload;\r\n      },\r\n      setLocation(state, payload) {\r\n        state.map.location.lat = payload.lat;\r\n        state.map.location.lng = payload.lng;\r\n      },\r\n      setWatchPositionOn(state, payload) {\r\n        state.map.watchPositionOn = payload;\r\n      },\r\n      setLayerUrls(state, payload) {\r\n        state.layers.layerUrls = payload;\r\n      },\r\n      setInputLayerFilter(state, payload) {\r\n        state.layers.inputLayerFilter = payload;\r\n      },\r\n      setInputTagsFilter(state, payload) {\r\n        state.layers.inputTagsFilter = payload;\r\n      },\r\n      setMap(state, payload) {\r\n        state.map.map = payload.map;\r\n      },\r\n      setWebMap(state, payload) {\r\n        state.map.webMap = payload;\r\n      },\r\n      setWebMapUrlLayer(state, payload) {\r\n        state.map.webMapUrlLayer = payload;\r\n      },\r\n      setWebMapActiveLayers(state, payload) {\r\n        state.map.webMapActiveLayers = payload;\r\n      },\r\n      setWebMapDisplayedLayers(state, payload) {\r\n        state.map.webMapDisplayedLayers = payload;\r\n      },\r\n      setWebMapLayersAndRest(state, payload) {\r\n        state.map.webMapLayersAndRest = payload;\r\n      },\r\n      setWebMapLayersOpacity(state, payload) {\r\n        // console.log('SETWEBMAPLAYERSOPACITY IS RUNNING', payload);\r\n        // let opa = state.map.webMapLayersAndRest.filter(layer => layer.layerName === payload.layerName)[0].opacity\r\n        // console.log('OPACITY BEFORE', state.map.webMapLayersAndRest.filter(layer => layer.title === payload.layerName)[0].opacity);\r\n        state.map.webMapLayersAndRest.filter(layer => layer.title === payload.layerName)[0].opacity = payload.opa;\r\n        // console.log('OPACITY AFTER', state.map.webMapLayersAndRest.filter(layer => layer.title === payload.layerName)[0].opacity);\r\n        //   return currentLayer[0];\r\n        // console.log('SETWEBMAPLAYERSOPACITY FINISHED RUNNING');\r\n      },\r\n      setLegend(state, payload) {\r\n        state.map.webMapLayersAndRest.filter(layer => layer.title === payload.layerName)[0].legend = payload.legend;\r\n      },\r\n      setMapScale(state, payload) {\r\n        state.map.scale = payload\r\n      },\r\n      // setBasemap(state, payload) {\r\n      //   state.map.basemap = payload;\r\n      // },\r\n      setDidToggleTopicsOn(state, payload) {\r\n        state.didToggleTopicsOn = payload;\r\n      },\r\n      setShouldShowTopics(state, payload) {\r\n        state.shouldShowTopics = payload;\r\n      },\r\n      setShouldShowMap(state, payload) {\r\n        state.shouldShowMap = payload;\r\n      },\r\n      setWindowWidth(state, payload) {\r\n        state.windowWidth = payload;\r\n      },\r\n      setRoute(state, payload) {\r\n        state.route = payload;\r\n      },\r\n      setDidToggleModal(state, name) {\r\n        // console.log('setDidToggleModal, name:', name, 'open:', open);\r\n        // console.log('setDidToggleModal, name:', name);\r\n        // state.modals[name].open = open === null ? !state.modals[name].open : open\r\n        state.modals.open = name;\r\n      },\r\n      setCandidates(state, payload) {\r\n        state.candidates = payload;\r\n      },\r\n      setAddressEntered(state, payload) {\r\n        state.addressEntered = payload;\r\n      },\r\n    }\r\n  }\r\n\r\n  // let mergeStore = mergeDeep(lb, pvdStore.store);\r\n  let mergeStore = mergeDeep(pvcStore, pvdStore.store);\r\n  mergeStore = mergeDeep(mergeStore, pvmStore);\r\n  mergeStore = mergeDeep(mergeStore, lb);\r\n\r\n  // reset the map center and zoom based on the config\r\n  mergeStore.state.map.center = config.map.center;\r\n  mergeStore.state.map.zoom = config.map.zoom;\r\n  mergeStore.state.pictometry.map.center = config.map.center;\r\n  mergeStore.state.pictometry.map.zoom = config.map.zoom;\r\n\r\n  return new Vuex.Store({\r\n    state: mergeStore.state,\r\n    getters: mergeStore.getters,\r\n    mutations: mergeStore.mutations\r\n  });\r\n}\r\n\r\nexport default createStore;\r\n","// shout out to airyland\r\n// https://github.com/airyland/vue-config/blob/master/index.js\r\n\r\nexport default (Vue, config) => {\r\n  Vue.mixin({\r\n    created() {\r\n      this.$config = config;\r\n    }\r\n  });\r\n};\r\n","<template>\r\n  <div id=\"topic-panel-container\"\r\n       :class=\"this.topicPanelContainerClass\"\r\n  >\r\n  <!-- class=\"cell medium-8 small-order-2 medium-order-1\" -->\r\n      <div class=\"cell\">\r\n        <div class=\"forms-header\">\r\n\r\n          <!-- layer filter -->\r\n          <!-- <form @submit.prevent=\"handleLayerFilterFormX\"\r\n                @keydown=\"preventEnter\"\r\n                class=\"om-search-control-input\"\r\n          >\r\n            <div class=\"input-group text-filter\">\r\n              <span class=\"input-group-label input-font\">Filter By Text:</span>\r\n              <input\r\n                     type=\"text\"\r\n                     class=\"input-type\"\r\n                     @keyup=\"handleLayerFilterFormKeyup\"\r\n              />\r\n              <div class=\"input-group-button\"\r\n                   v-if=\"this.$store.state.layers.inputLayerFilter != ''\"\r\n              >\r\n\r\n                <button class=\"om-search-control-button\">\r\n                  <i class=\"fa fa-times fa-lg\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form> -->\r\n\r\n          <!-- tags filter -->\r\n          <form @submit.prevent=\"handleTagsFilterFormX\"\r\n                @keydown=\"preventEnter\"\r\n                class=\"om-search-control-input-tags\"\r\n          >\r\n            <div class=\"input-group text-filter\">\r\n              <span class=\"input-group-label input-font\">Filter:</span>\r\n              <input\r\n                     type=\"text\"\r\n                     class=\"input-type\"\r\n                     @keyup=\"handleTagsFilterFormKeyup\"\r\n              />\r\n              <!-- placeholder=\"Filter datasets\" -->\r\n              <div class=\"input-group-button\"\r\n                   v-if=\"this.$store.state.layers.inputTagsFilter != ''\"\r\n              >\r\n\r\n                <button class=\"om-search-control-button\">\r\n                  <i class=\"fa fa-times fa-lg\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <!-- categories filter -->\r\n          <!-- <div class=\"input-group\">\r\n            <span class=\"input-group-label input-font\">Filter By Category:</span>\r\n\r\n            <select @change=\"didSelectCategory\"\r\n                    class=\"input-select\"\r\n            >\r\n              <option v-for=\"category in this.categories\"\r\n                      value=\"category\"\r\n              >\r\n                {{ category }}\r\n              </option>\r\n            </select>\r\n          </div> -->\r\n        </div>\r\n      <!-- </div> -->\r\n\r\n        <div class=\"topics-container cell medium-cell-block-y\"\r\n             id=\"topics-container\"\r\n        >\r\n          <form action=\"#/\">\r\n            <fieldset class=\"options\">\r\n              <!-- <ul class=\"no-bullet\"> -->\r\n                <checkbox v-for=\"(currentWmLayer, index) in this.currentWmLayers\"\r\n                          :layer=\"currentWmLayer.layer\"\r\n                          :layerName=\"currentWmLayer.title\"\r\n                          :layerId=\"currentWmLayer.id\"\r\n                          :layerDefinition=\"currentWmLayer.rest.layerDefinition\"\r\n                          :opacity=\"currentWmLayer.opacity\"\r\n                          :legend=\"currentWmLayer.legend\"\r\n                          :key=\"currentWmLayer.id\"\r\n                >\r\n                <!-- :tags=\"currentWmLayer.tags\" -->\r\n                </checkbox>\r\n              <!-- </ul> -->\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  // import * as philaVueComps from '@cityofphiladelphia/phila-vue-comps';\r\n  // const Checkbox = philaVueComps.Checkbox\r\n\r\n  import {\r\n    Checkbox\r\n  } from '@cityofphiladelphia/phila-vue-mapping';\r\n\r\n  export default {\r\n    components: {\r\n      Checkbox\r\n    },\r\n    computed: {\r\n      windowWidth() {\r\n        return this.$store.state.windowWidth;\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      topicPanelContainerClass() {\r\n        if (this.fullScreenMapEnabled) {\r\n          return 'cell medium-1 small-order-2 medium-order-1'\r\n        } else if (this.windowWidth >= 950) {\r\n          return 'cell medium-8 small-order-1 small-24 medium-order-2';\r\n        } else {\r\n          return 'cell medium-10 small-order-1 small-24 medium-order-2';\r\n        }\r\n      },\r\n      categories() {\r\n        return this.$store.state.map.categories;\r\n      },\r\n      selectedCategory() {\r\n        return this.$store.state.map.selectedCategory;\r\n      },\r\n      scale() {\r\n        return this.$store.state.map.scale;\r\n      },\r\n      currentWmLayers() {\r\n        const layers = this.$store.state.map.webMapLayersAndRest;\r\n        let currentLayers = [];\r\n        for (let layer of layers) {\r\n          if (layer.tags) {\r\n            if (\r\n              layer.title.toLowerCase().includes(this.inputLayerFilter.toLowerCase()) && layer.tags.join().toLowerCase().includes(this.inputTagsFilter.toLowerCase()) && layer.category.includes(this.selectedCategory)\r\n              || this.$store.state.map.webMapActiveLayers.includes(layer.title)\r\n            ) {\r\n              // if (this.inputTagsFilter !== '') {\r\n              //   for (let layerTag of layer.tags) {\r\n              //     if (layerTag.toLowerCase().includes(this.inputTagsFilter.toLowerCase())) {\r\n              //       console.log('layerTag:', layerTag);\r\n              //     }\r\n              //   }\r\n              // }\r\n              currentLayers.push(layer)\r\n            }\r\n          } else if (this.inputTagsFilter !== '') {\r\n            continue;\r\n          } else {\r\n            if (\r\n              layer.title.toLowerCase().includes(this.inputLayerFilter.toLowerCase()) && layer.category.includes(this.selectedCategory)\r\n              || this.$store.state.map.webMapActiveLayers.includes(layer.title)\r\n            ) {\r\n              currentLayers.push(layer)\r\n            }\r\n          }\r\n        }\r\n        return currentLayers;\r\n      },\r\n      inputLayerFilter() {\r\n        return this.$store.state.layers.inputLayerFilter;\r\n      },\r\n      inputTagsFilter() {\r\n        return this.$store.state.layers.inputTagsFilter;\r\n      },\r\n      windowSize() {\r\n        return this.$store.state.windowSize;\r\n      },\r\n    },\r\n    methods: {\r\n      handleLayerFilterFormKeyup(e) {\r\n        const input = e.target.value;\r\n        this.$store.commit('setInputLayerFilter', input);\r\n      },\r\n      handleLayerFilterFormX(e) {\r\n        e.target[0].value = ''\r\n        this.$store.commit('setInputLayerFilter', '');\r\n      },\r\n      handleTagsFilterFormKeyup(e) {\r\n        const input = e.target.value;\r\n        // if (input.length >= 3) {\r\n        this.$store.commit('setInputTagsFilter', input);\r\n        // } else {\r\n          // this.$store.commit('setInputLayerFilter', null);\r\n        // }\r\n      },\r\n      handleTagsFilterFormX(e) {\r\n        e.target[0].value = ''\r\n        this.$store.commit('setInputTagsFilter', '');\r\n      },\r\n      didSelectCategory(e) {\r\n        const selected = e.target.selectedIndex;\r\n        this.$store.commit('setSelectedCategory', this.categories[selected]);\r\n      },\r\n      preventEnter(e) {\r\n        if(e.keyCode === 13) {\r\n          e.preventDefault();\r\n        }\r\n      },\r\n    },\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .forms-header {\r\n    padding: 5px;\r\n    /*this keeps the box shadow over the scrollable part of the panel*/\r\n    position: relative;\r\n    z-index: 1;\r\n    -webkit-box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\r\n    -moz-box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\r\n    box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\r\n  }\r\n\r\n  .input-type {\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  .input-select {\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  .input-group {\r\n    height: 40px !important;\r\n    margin-top: 6px;\r\n    margin-bottom: 6px;\r\n  }\r\n\r\n  .input-group-label {\r\n    border-right: 1px;\r\n    border-style: solid;\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n    padding-top: 0px;\r\n    padding-bottom: 0px;\r\n    height: 20px !important;\r\n  }\r\n\r\n  .topics-container {\r\n    padding: 20px;\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  .topics-container {\r\n    /* height: calc(100vh - 220px); */\r\n    /* height: calc(100vh - 268px); */\r\n\r\n    /* height: calc(100vh - 218px); */\r\n    height: calc(100vh - 170px);\r\n  }\r\n\r\n  /* @media screen and (max-width: 40em) { */\r\n  @media screen and (max-width: 750px) {\r\n    .topics-container {\r\n      /* height: calc(100vh - 256px); */\r\n      height: calc(100vh - 300px);\r\n    }\r\n  }\r\n\r\n  .om-search-control-container {\r\n    border-radius: 2px;\r\n    box-shadow:0 2px 4px rgba(0,0,0,0.2),0 -1px 0px rgba(0,0,0,0.02);\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    width: inherit;\r\n  }\r\n\r\n  .om-search-control-button {\r\n    width: 40px;\r\n    background: #ccc;\r\n    float: right;\r\n  }\r\n\r\n  .om-search-control-input {\r\n    font-family: 'Montserrat', 'Tahoma', sans-serif;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .om-search-control-input-tags {\r\n    font-family: 'Montserrat', 'Tahoma', sans-serif;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .input-font {\r\n    font-family: 'Montserrat', 'Tahoma', sans-serif;\r\n    font-size: 16px;\r\n  }\r\n\r\n</style>\r\n","export default {\r\n  computed: {\r\n    // returns map markers as simple object with a geometry property, key,\r\n    // and optional properties for symbology\r\n    markers() {\r\n      const markers = [];\r\n      // geocoded address marker\r\n      const geocodeGeom = this.geocodeGeom;\r\n      if (geocodeGeom) {\r\n        const latlng = [...geocodeGeom.coordinates].reverse();\r\n        const key = this.geocodeResult.properties.street_address;\r\n        const color = '#2176d2';\r\n        const markerType = 'geocode';\r\n        const icon = {\r\n          prefix: 'fas',\r\n          icon: 'map-marker-alt',\r\n          shadow: true,\r\n          size: 50,\r\n        }\r\n        const addressMarker = {latlng, key, color, markerType, icon};\r\n        markers.push(addressMarker);\r\n      }\r\n      return markers;\r\n    },\r\n    locationMarker() {\r\n      const latlngArray = [this.$store.state.map.location.lat, this.$store.state.map.location.lng]\r\n      const marker = {\r\n        latlng: latlngArray,\r\n        radius: 6,\r\n        fillColor: '#ff3f3f',\r\n        color: '#ff0000',\r\n        weight: 1,\r\n        opacity: 1,\r\n        fillOpacity: 1.0\r\n      }\r\n      return marker;\r\n    },\r\n  },\r\n};\r\n","<template>\r\n  <div id=\"map-panel-container\"\r\n       :class=\"this.mapPanelContainerClass\"\r\n  >\r\n    <full-screen-map-toggle-tab v-once />\r\n    <map_ :class=\"{ 'mb-map-with-widget': this.$store.state.cyclomedia.active || this.$store.state.pictometry.active }\"\r\n          id=\"map-tag\"\r\n          :center=\"this.mapCenter\"\r\n          :zoom=\"this.$store.state.map.zoom\"\r\n          @l-click=\"handleMapClick\"\r\n          @l-moveend=\"handleMapMove\"\r\n          zoom-control-position=\"bottomright\"\r\n          :min-zoom=\"this.$config.map.minZoom\"\r\n          :max-zoom=\"22\"\r\n    >\r\n\r\n    <!-- <polygon_ -->\r\n    <polygon_ v-if=\"this.selectedPopupLayerGeometryType === 'Polygon' || this.selectedPopupLayerGeometryType === 'MultiPolygon'\"\r\n              :color=\"'#00ffff'\"\r\n              :fill=\"false\"\r\n              :weight=\"5\"\r\n              :latlngs=\"this.selectedPopupLayerCoordinatesFlipped\"\r\n              :pane=\"'highlightOverlay'\"\r\n    />\r\n    <polyline_ v-if=\"this.selectedPopupLayerGeometryType === 'LineString'\"\r\n              :color=\"'#00ffff'\"\r\n              :weight=\"4\"\r\n              :latlngs=\"this.selectedPopupLayerCoordinatesFlipped\"\r\n              :pane=\"'highlightOverlay'\"\r\n    />\r\n    <circle-marker v-if=\"this.selectedPopupLayerGeometryType === 'Point'\"\r\n                   :latlng=\"this.selectedPopupLayerCoordinatesFlipped\"\r\n                   :radius=\"7\"\r\n                   :fillColor=\"'#00ffff'\"\r\n                   :color=\"'#00ffff'\"\r\n                   :weight=\"this.locationMarker.weight\"\r\n                   :opacity=\"this.locationMarker.opacity\"\r\n                   :fillOpacity=\"this.locationMarker.fillOpacity\"\r\n                   :pane=\"'highlightOverlay'\"\r\n    />\r\n\r\n      <!-- webmap -->\r\n      <esri-web-map>\r\n        <esri-web-map-layer v-for=\"(layer, key) in this.$store.state.map.webMapLayersAndRest\"\r\n                            v-if=\"shouldShowFeatureLayer(layer)\"\r\n                            :key=\"key\"\r\n                            :layer=\"layer.layer\"\r\n                            :layerName=\"layer.title\"\r\n                            :layerDefinition=\"layer.rest.layerDefinition\"\r\n                            :opacity=\"layer.opacity\"\r\n                            :type=\"layer.type2\"\r\n        />\r\n      </esri-web-map>\r\n      <pop-up v-if=\"this.shouldShowPopup\">\r\n        <pop-up-content />\r\n      </pop-up>\r\n\r\n\r\n      <!-- basemaps -->\r\n      <esri-tiled-map-layer v-for=\"(basemap, key) in this.$config.map.basemaps\"\r\n                         v-if=\"activeBasemap === key\"\r\n                         :key=\"key\"\r\n                         :name=\"key\"\r\n                         :url=\"basemap.url\"\r\n                         :max-zoom=\"basemap.maxZoom\"\r\n                         :zIndex=\"basemap.zIndex\"\r\n                         :attribution=\"basemap.attribution\"\r\n      />\r\n\r\n      <!-- basemap labels and parcels outlines -->\r\n      <esri-tiled-map-layer v-for=\"(tiledLayer, key) in this.$config.map.tiledLayers\"\r\n                         v-if=\"activeTiles.includes(key)\"\r\n                         :key=\"key\"\r\n                         :name=\"key\"\r\n                         :url=\"tiledLayer.url\"\r\n                         :zIndex=\"tiledLayer.zIndex\"\r\n                         :attribution=\"tiledLayer.attribution\"\r\n      />\r\n\r\n      <vector-marker v-for=\"(marker, index) in markers\"\r\n                    :latlng=\"marker.latlng\"\r\n                    :key=\"marker.key\"\r\n                    :markerColor=\"marker.color\"\r\n                    :icon=\"marker.icon\"\r\n      />\r\n\r\n      <!-- marker using a png and ablility to rotate it -->\r\n      <png-marker v-if=\"this.cyclomediaActive\"\r\n                  :icon=\"'images/camera.png'\"\r\n                  :latlng=\"cycloLatlng\"\r\n                  :rotationAngle=\"cycloRotationAngle\"\r\n      />\r\n\r\n      <!-- marker using custom code extending icons - https://github.com/iatkin/leaflet-svgicon -->\r\n      <svg-view-cone-marker v-if=\"this.cyclomediaActive\"\r\n                            :latlng=\"cycloLatlng\"\r\n                            :rotationAngle=\"cycloRotationAngle\"\r\n                            :hFov=\"cycloHFov\"\r\n      />\r\n\r\n      <control-corner :vSide=\"'top'\"\r\n                      :hSide=\"'almostright'\"\r\n      >\r\n      </control-corner>\r\n\r\n      <control-corner :vSide=\"'top'\"\r\n                      :hSide=\"'almostleft'\"\r\n      >\r\n      </control-corner>\r\n\r\n      <div v-once>\r\n        <basemap-toggle-control v-if=\"shouldShowImageryToggle\"\r\n                                v-once\r\n                                :position=\"'topright'\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <basemap-select-control\r\n                       :position=\"'topalmostright'\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <pictometry-button v-if=\"this.shouldShowPictometryButton\"\r\n                           v-once\r\n                           :position=\"'topright'\"\r\n                           :link=\"'pictometry'\"\r\n                           :imgSrc=\"'images/pictometry.png'\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <cyclomedia-button v-if=\"this.shouldShowCyclomediaButton\"\r\n                           v-once\r\n                           :position=\"'topright'\"\r\n                           :link=\"'cyclomedia'\"\r\n                           :imgSrc=\"'images/cyclomedia.png'\"\r\n                           @click=\"handleCyclomediaButtonClick\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once\r\n           v-if=\"this.measureControlEnabled\"\r\n      >\r\n        <measure-control :position=\"'bottomleft'\" />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <location-control v-once\r\n                          v-if=\"this.geolocationEnabled\"\r\n                          :position=\"'bottomright'\"\r\n                          @click=\"handleButtonClick\"\r\n        />\r\n      </div>\r\n\r\n      <!-- search control -->\r\n      <div v-once>\r\n        <map-address-input :position=\"this.addressInputPosition\" />\r\n      </div>\r\n      <map-address-candidate-list v-if=\"this.addressAutocompleteEnabled\"\r\n                            :position=\"this.addressInputPosition\"\r\n      />\r\n\r\n      <!-- location marker -->\r\n      <circle-marker v-if=\"this.$store.state.map.location.lat != null\"\r\n                     :latlng=\"this.locationMarker.latlng\"\r\n                     :radius=\"this.locationMarker.radius\"\r\n                     :fillColor=\"this.locationMarker.fillColor\"\r\n                     :color=\"this.locationMarker.color\"\r\n                     :weight=\"this.locationMarker.weight\"\r\n                     :opacity=\"this.locationMarker.opacity\"\r\n                     :fillOpacity=\"this.locationMarker.fillOpacity\"\r\n                     :pane=\"'highlightOverlay'\"\r\n      />\r\n\r\n      <cyclomedia-recording-circle v-for=\"recording in cyclomediaRecordings\"\r\n                                   v-if=\"cyclomediaActive\"\r\n                                   :key=\"recording.imageId\"\r\n                                   :imageId=\"recording.imageId\"\r\n                                   :latlng=\"[recording.lat, recording.lng]\"\r\n                                   :size=\"1.2\"\r\n                                   :color=\"'#3388ff'\"\r\n                                   :weight=\"1\"\r\n                                   @l-click=\"handleCyclomediaRecordingClick\"\r\n      />\r\n    </map_>\r\n    <modal-about></modal-about>\r\n    <slot class='widget-slot' name=\"cycloWidget\" />\r\n    <slot class='widget-slot' name=\"pictWidget\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  // import { geoJSON, featureGroup } from 'leaflet';\r\n  // import { marker as Lmarker } from 'leaflet';\r\n\r\n  // mixins\r\n  import markersMixin from './markers-mixin';\r\n  import {\r\n    cyclomediaMixin,\r\n    pictometryMixin,\r\n    Map_,\r\n    Control,\r\n    MapAddressInput,\r\n    MapAddressCandidateList,\r\n    EsriTiledMapLayer,\r\n    EsriTiledOverlay,\r\n    EsriDynamicMapLayer,\r\n    EsriFeatureLayer,\r\n    // Geojson,\r\n    CircleMarker,\r\n    // OpacitySlider,\r\n    VectorMarker,\r\n    PngMarker,\r\n    BasemapToggleControl,\r\n    BasemapSelectControl,\r\n    FullScreenMapToggleTab,\r\n    LocationControl,\r\n    CyclomediaButton,\r\n    PictometryButton,\r\n    CyclomediaRecordingCircle,\r\n    CyclomediaRecordingsClient,\r\n    SvgViewConeMarker,\r\n    MeasureControl,\r\n    LegendControl,\r\n    BasemapTooltip,\r\n    ControlCorner,\r\n    EsriWebMap,\r\n    EsriWebMapLayer,\r\n    PopUp,\r\n    PopUpContent,\r\n    Polygon_,\r\n    Polyline_,\r\n    ModalAbout\r\n  } from '@cityofphiladelphia/phila-vue-mapping';\r\n\r\n  export default {\r\n    name: 'MapPanel',\r\n    mixins: [\r\n      markersMixin,\r\n      cyclomediaMixin,\r\n      pictometryMixin,\r\n    ],\r\n    components: {\r\n      Map_,\r\n      Control,\r\n      MapAddressInput,\r\n      MapAddressCandidateList,\r\n      EsriWebMap,\r\n      EsriWebMapLayer,\r\n      EsriTiledMapLayer,\r\n      CircleMarker,\r\n      VectorMarker,\r\n      PngMarker,\r\n      BasemapToggleControl,\r\n      BasemapSelectControl,\r\n      FullScreenMapToggleTab,\r\n      LocationControl,\r\n      PictometryButton,\r\n      CyclomediaButton,\r\n      CyclomediaRecordingCircle,\r\n      SvgViewConeMarker,\r\n      MeasureControl,\r\n      ControlCorner,\r\n      PopUp,\r\n      PopUpContent,\r\n      Polygon_,\r\n      Polyline_,\r\n      ModalAbout\r\n    },\r\n    mounted() {\r\n      this.$controller.appDidLoad();\r\n    },\r\n    computed: {\r\n      mapCenter() {\r\n        return this.$store.state.map.center;\r\n      },\r\n      addressAutocompleteEnabled() {\r\n        // TODO tidy up the code\r\n        if (this.$config.addressAutocomplete.enabled === true) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      addressInputPosition() {\r\n        if (this.isMobileOrTablet) {\r\n          return 'topleft'\r\n        } else {\r\n          return 'topalmostleft'\r\n        }\r\n      },\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      windowWidth() {\r\n        return this.$store.state.windowWidth;\r\n      },\r\n      mapPanelContainerClass() {\r\n        if (this.fullScreenMapEnabled) {\r\n          return 'medium-24 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\r\n        } else if (this.windowWidth >= 950) {\r\n          return 'medium-16 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map';\r\n        } else {\r\n          return 'medium-14 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map';\r\n        }\r\n      },\r\n      cycloLatlng() {\r\n        if (this.$store.state.cyclomedia.orientation.xyz !== null) {\r\n          const xyz = this.$store.state.cyclomedia.orientation.xyz;\r\n          return [xyz[1], xyz[0]];\r\n        } else {\r\n          const center = this.$config.map.center;\r\n          return center;\r\n        }\r\n      },\r\n      cycloRotationAngle() {\r\n        return this.$store.state.cyclomedia.orientation.yaw * (180/3.14159265359);\r\n      },\r\n      cycloHFov() {\r\n        return this.$store.state.cyclomedia.orientation.hFov;\r\n      },\r\n      shouldShowCyclomediaButton() {\r\n        return this.$config.cyclomedia.enabled && !this.isMobileOrTablet;\r\n      },\r\n      shouldShowPictometryButton() {\r\n        return this.$config.pictometry.enabled && !this.isMobileOrTablet;\r\n      },\r\n      shouldShowPopup() {\r\n        if (this.intersectingFeatures.length > 0) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      selectedPopupLayer() {\r\n        return this.$store.state.map.selectedPopupLayer;\r\n      },\r\n      selectedPopupLayerGeometryType() {\r\n        if (this.selectedPopupLayer) {\r\n          return this.selectedPopupLayer.feature.geometry.type;\r\n        } else {\r\n          return null;\r\n      }\r\n      },\r\n      selectedPopupLayerCoordinates() {\r\n        if (this.selectedPopupLayerGeometryType === \"Point\" || this.selectedPopupLayerGeometryType === \"LineString\") {\r\n          return this.selectedPopupLayer.feature.geometry.coordinates;\r\n        } else if (this.selectedPopupLayerGeometryType === \"Polygon\") {\r\n          return this.selectedPopupLayer.feature.geometry.coordinates[0];\r\n        } else if (this.selectedPopupLayerGeometryType === \"MultiPolygon\") {\r\n          return this.selectedPopupLayer.feature.geometry.coordinates;\r\n        }\r\n      },\r\n      selectedPopupLayerCoordinatesFlipped() {\r\n        // console.log('coords:', this.flipCoordsArray(this.selectedPopupLayerCoordinates));\r\n        if (this.selectedPopupLayerGeometryType === \"Point\") {\r\n          return this.flipCoords(this.selectedPopupLayerCoordinates);\r\n        } else if (this.selectedPopupLayerGeometryType !== \"MultiPolygon\") {\r\n          // console.log('calling FlipCoordsArray on:', this.selectedPopupLayerCoordinates);\r\n          return this.flipCoordsArray(this.selectedPopupLayerCoordinates);\r\n        } else {\r\n          return this.flipCoordsMultiPolygon(this.selectedPopupLayerCoordinates);\r\n        }\r\n      },\r\n      intersectingFeatures() {\r\n        return this.$store.state.map.intersectingFeatures;\r\n      },\r\n      geolocationEnabled() {\r\n        return this.$config.geolocation.enabled;\r\n      },\r\n      scale() {\r\n        return this.$store.state.map.scale;\r\n      },\r\n      webMapActiveLayers() {\r\n        return this.$store.state.map.webMapActiveLayers;\r\n      },\r\n      activeBasemap() {\r\n        const shouldShowImagery = this.$store.state.map.shouldShowImagery;\r\n        if (shouldShowImagery) {\r\n          return this.$store.state.map.imagery;\r\n        }\r\n        const defaultBasemap = this.$config.map.defaultBasemap;\r\n        const basemap = this.$store.state.map.basemap || defaultBasemap;\r\n        return basemap;\r\n      },\r\n      activeTiles() {\r\n        if (this.$config.map.basemaps[this.activeBasemap]) {\r\n          return this.$config.map.basemaps[this.activeBasemap].tiledLayers;\r\n        } else {\r\n          return [];\r\n        }\r\n      },\r\n      basemaps() {\r\n        return Object.values(this.$config.map.basemaps);\r\n      },\r\n      shouldShowImageryToggle() {\r\n        return this.hasImageryBasemaps && this.$config.map.imagery.enabled;\r\n      },\r\n      imageryBasemaps() {\r\n        return this.basemaps.filter(basemap => basemap.type === 'imagery');\r\n      },\r\n      hasImageryBasemaps() {\r\n        return this.imageryBasemaps.length > 0;\r\n      },\r\n      imageryYears() {\r\n        // pluck year from basemap objects\r\n        return this.imageryBasemaps.map(x => x.year);\r\n      },\r\n      historicBasemaps() {\r\n        return this.basemaps.filter(basemap => basemap.type === 'historic');\r\n      },\r\n      hasHistoricBasemaps() {\r\n        return this.historicBasemaps.length > 0;\r\n      },\r\n      historicYears() {\r\n        return this.historicBasemaps.map(x => x.year);\r\n      },\r\n      geocodeResult() {\r\n        return this.$store.state.geocode.data;\r\n      },\r\n      geocodeGeom() {\r\n        return (this.geocodeResult || {}).geometry;;\r\n      },\r\n      picOrCycloActive() {\r\n        if (this.cyclomediaActive || this.pictometryActive) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      measureControlEnabled() {\r\n        if (this.$config.measureControlEnabled === false) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n    },\r\n    created() {\r\n      // if there's a default address, navigate to it\r\n      const defaultAddress = this.$config.defaultAddress;\r\n      if (defaultAddress) {\r\n        this.$controller.goToDefaultAddress(defaultAddress);\r\n      }\r\n\r\n      const cyclomediaConfig = this.$config.cyclomedia || {};\r\n      if (cyclomediaConfig.enabled) {\r\n      // create cyclomedia recordings client\r\n        this.$cyclomediaRecordingsClient = new CyclomediaRecordingsClient(\r\n          this.$config.cyclomedia.recordingsUrl,\r\n          this.$config.cyclomedia.username,\r\n          this.$config.cyclomedia.password,\r\n          4326\r\n        );\r\n      }\r\n    },\r\n    watch: {\r\n      picOrCycloActive(value) {\r\n        this.$nextTick(() => {\r\n          this.$store.state.map.map.invalidateSize();\r\n        })\r\n      }\r\n    },\r\n    methods: {\r\n      flipCoords(coords) {\r\n        // console.log('flipCoords is running on:', coords);\r\n        return [coords[1], coords[0]];\r\n      },\r\n      flipCoordsArray(anArray) {\r\n        // console.log('flipCoordsArray is running on:', anArray);\r\n        let newArray = []\r\n        for (let i in anArray) {\r\n          newArray[i] = [anArray[i][1], anArray[i][0]]\r\n        }\r\n        return newArray\r\n      },\r\n      flipCoordsMultiPolygon(aMultiPolygon) {\r\n        // console.log('flipCoordsMultiPolygon is running on:', aMultiPolygon);\r\n        let newArrayArray = []\r\n        for (let i in aMultiPolygon) {\r\n          // console.log('aMultiPolygon[i]', aMultiPolygon[i]);\r\n          let newArray = []\r\n          for (let j in aMultiPolygon[i][0]) {\r\n            // console.log('aMultiPolygon[i][0][j]', aMultiPolygon[i][0][j]);\r\n            newArray[j] = [aMultiPolygon[i][0][j][1], aMultiPolygon[i][0][j][0]]\r\n          }\r\n        newArrayArray[i] = newArray\r\n        }\r\n        return newArrayArray\r\n      },\r\n      shouldShowFeatureLayer(layer) {\r\n        if (layer.rest.layerDefinition) {\r\n          if (layer.rest.layerDefinition.minScale) {\r\n            // console.log('minZoom for', layer.title, 'is', layer.rest.layerDefinition.minScale, typeof layer.rest.layerDefinition.minScale, 'and current scale is', this.scale, typeof this.scale);\r\n            if (this.scale <= layer.rest.layerDefinition.minScale && this.webMapActiveLayers.includes(layer.title)) {\r\n              // console.log('checkLayer used layerDefinition and is returning true for', layer.title);\r\n              return true;\r\n            }\r\n          } else if (layer.rest.layerDefinition.drawingInfo && this.webMapActiveLayers.includes(layer.title)) {\r\n            return true;\r\n          }\r\n        } else if (this.webMapActiveLayers.includes(layer.title)) {\r\n          // console.log('checkLayer is returning true for', layer.title);\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      handleMapClick() {\r\n        // console.log('handle map click, e:', e);\r\n        document.getElementById('pvm-search-control-input').blur()\r\n      },\r\n      handleButtonClick() {\r\n        // console.log('handle button click is running');\r\n        document.getElementById('pvm-search-control-input').blur()\r\n      },\r\n      handleMapMove(e) {\r\n        // console.log('handleMapMove is running');\r\n        const map = this.$store.state.map.map;\r\n\r\n        const pictometryConfig = this.$config.pictometry || {};\r\n\r\n        const center = map.getCenter();\r\n        const { lat, lng } = center;\r\n        const coords = [lng, lat];\r\n        const zoom = map.getZoom();\r\n        this.$store.commit('setMapZoom', zoom);\r\n        const scale = this.$config.map.scales[zoom];\r\n        this.$store.commit('setMapScale', scale);\r\n\r\n        if (pictometryConfig.enabled) {\r\n          // update state for pictometry\r\n          this.$store.commit('setPictometryMapCenter', coords);\r\n\r\n          const zoom = map.getZoom();\r\n          this.$store.commit('setPictometryMapZoom', zoom);\r\n        }\r\n\r\n        const cyclomediaConfig = this.$config.cyclomedia || {};\r\n\r\n        if (cyclomediaConfig.enabled) {\r\n          // update cyclo recordings\r\n          this.updateCyclomediaRecordings();\r\n          this.$store.commit('setCyclomediaLatLngFromMap', [lat, lng]);\r\n        }\r\n      },\r\n\r\n    }, // end of methods\r\n  }; //end of export\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  /* .map-panel-container {\r\n    height: calc(100vh - 220px);\r\n  }\r\n\r\n  @media screen and (max-width: 40em) {\r\n    .map-panel-container {\r\n      height: calc(100vh - 256px);\r\n    }\r\n  } */\r\n\r\n/*this allows the loading mask to fill the div*/\r\n  .mb-panel-map {\r\n    position: relative;\r\n  }\r\n\r\n  .mb-map-with-widget {\r\n    height: 50%;\r\n  }\r\n\r\n  /* @media (max-width: 1024px) {\r\n    .mb-panel-map {\r\n      height: 600px;\r\n    }\r\n  } */\r\n\r\n  .mb-search-control-container {\r\n    height: 48px;\r\n    border-radius: 2px;\r\n    box-shadow:0 2px 4px rgba(0,0,0,0.2),0 -1px 0px rgba(0,0,0,0.02);\r\n  }\r\n\r\n  .mb-search-control-button {\r\n    color: #fff;\r\n    width: 50px;\r\n    background: #2176d2;\r\n    line-height: 48px;\r\n  }\r\n\r\n  .mb-search-control-input {\r\n    /* background-color: white; */\r\n    border: 0;\r\n    /* height: 48px !important; */\r\n    /* line-height: 48px; */\r\n    padding: 15px;\r\n    /* padding-left: 15px; */\r\n    /* padding-right: 15px; */\r\n    font-family: 'Montserrat', 'Tahoma', sans-serif;\r\n    font-size: 16px;\r\n    width: 275px;\r\n  }\r\n\r\n  /* .mb-map-with-widget {\r\n    height: 50%;\r\n  } */\r\n\r\n  .widget-slot {\r\n    display: inline-block;\r\n    float: left;\r\n  }\r\n\r\n  .mb-map-loading-mask {\r\n    /*display: inline;*/\r\n    position: absolute;\r\n    top: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: rgba(0, 0 ,0 , 0.25);\r\n    z-index: 1000;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .mb-map-loading-mask-inner {\r\n    position: absolute;\r\n    top: 40%;\r\n    left: 40%;\r\n  }\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    .mb-search-control-input {\r\n      width: 250px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 900px) {\r\n    .mb-search-control-input {\r\n      width: 200px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    .mb-search-control-input {\r\n      width: 150px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 750px) {\r\n    .mb-search-control-input {\r\n      width: 250px;\r\n    }\r\n  }\r\n\r\n  /* @media screen and (max-width: 639px) {\r\n    .mb-search-control-input {\r\n      width: 250px;\r\n    }\r\n  } */\r\n\r\n  @media screen and (max-width: 450px) {\r\n    .mb-search-control-input {\r\n      width: 200px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 400px) {\r\n    .mb-search-control-input {\r\n      width: 150px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 350px) {\r\n    .mb-search-control-input {\r\n      width: 100px;\r\n    }\r\n  }\r\n</style>\r\n","<template>\r\n  <div class=\"cell medium-auto grid-x\" id=\"mb-root\">\r\n    <button class=\"small-24 button datasets-button\"\r\n            @click=\"toggleTopics\"\r\n    >\r\n      {{ this.buttonMessage }}\r\n    </button>\r\n\r\n      <topic-panel v-show=\"shouldShowTopics\" />\r\n      <map-panel v-show=\"shouldShowMap\">\r\n        <cyclomedia-widget v-if=\"this.shouldLoadCyclomediaWidget\"\r\n                           slot=\"cycloWidget\"\r\n                           v-show=\"cyclomediaActive\"\r\n                           screen-percent=\"3\"\r\n        />\r\n        <pictometry-widget v-if=\"this.shouldLoadPictometryWidget\"\r\n                           slot=\"pictWidget\"\r\n                           v-show=\"pictometryActive\"\r\n                           :apiKey=\"this.ak\"\r\n                           :secretKey=\"this.sk\"\r\n        >\r\n          <pictometry-png-marker v-if=\"this.pictometryShowAddressMarker\"\r\n                      :latlng=\"[this.geocodeData.geometry.coordinates[1], this.geocodeData.geometry.coordinates[0]]\"\r\n                      :icon=\"'markers.png'\"\r\n                      :height=\"60\"\r\n                      :width=\"40\"\r\n                      :offsetX=\"0\"\r\n                      :offsetY=\"0\"\r\n          />\r\n          <pictometry-layer v-if=\"this.pictometryActive\" />\r\n          <pictometry-png-marker v-if=\"this.cyclomediaActive && this.pictometryActive\"\r\n                      :latlng=\"cycloLatlng\"\r\n                      :icon=\"'camera2.png'\"\r\n                      :height=\"20\"\r\n                      :width=\"30\"\r\n                      :offsetX=\"-2\"\r\n                      :offsetY=\"-2\"\r\n          />\r\n          <pictometry-view-cone v-if=\"this.cyclomediaActive && this.pictometryActive\"\r\n                     :latlng=\"cycloLatlng\"\r\n                     :rotationAngle=\"cycloRotationAngle\"\r\n                     :hFov=\"cycloHFov\"\r\n          />\r\n        </pictometry-widget>\r\n      </map-panel>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    CyclomediaWidget,\r\n    PictometryWidget,\r\n    PictometryLayer,\r\n    PictometryViewCone,\r\n    PictometryPngMarker\r\n  } from '@cityofphiladelphia/phila-vue-mapping';\r\n\r\n  import axios from 'axios';\r\n  import TopicPanel from './TopicPanel.vue';\r\n  import MapPanel from './MapPanel.vue';\r\n\r\n  export default {\r\n    name: 'Layerboard',\r\n    components: {\r\n      TopicPanel,\r\n      MapPanel,\r\n      CyclomediaWidget,\r\n      PictometryWidget,\r\n      PictometryLayer,\r\n      PictometryViewCone,\r\n      PictometryPngMarker\r\n    },\r\n    mounted() {\r\n      // console.log('cyclo', this.$config.cyclomedia.enabled, CyclomediaWidget);\r\n      window.addEventListener('resize', this.handleWindowResize);\r\n      this.handleWindowResize();\r\n\r\n      const store = this.$store;\r\n      const knackUrl = \"https://api.knackhq.com/v1/objects/object_4/records/export?type=json\";\r\n      const params = {\r\n        // dataType: 'json'\r\n      }\r\n      const headers = {\r\n        'X-Knack-Application-Id': '550c60d00711ffe12e9efc64',\r\n        'X-Knack-REST-API-Key': '7bce4520-28dc-11e5-9f0a-4d758115b820'\r\n      }\r\n      axios.get(knackUrl, { params, headers }).then(response => {\r\n        const dataOut = response.data;\r\n        const records = dataOut.records;\r\n        const recordsFiltered = records.filter(record => record.field_12 === \"API\" || record.field_12 === \"GeoService\");\r\n\r\n        let bennyEndpoints = {};\r\n\r\n        for (let record of recordsFiltered) {\r\n          const url = record.field_25.split('\"')[1];\r\n          let url2;\r\n          if (url) {\r\n            url2 = url.split('query')[0].replace('https://', '').replace('http://', '').replace(/\\/$/, \"\").toLowerCase();\r\n          } else {\r\n            url2 = null;\r\n          }\r\n          if (record.field_13_raw.length > 0) {\r\n              bennyEndpoints[url2] = record.field_13_raw[0].id;\r\n          } else {\r\n              bennyEndpoints[url2] = '';\r\n          }\r\n        }\r\n        store.commit('setBennyEndpoints', bennyEndpoints);\r\n      }, response => {\r\n        console.log('AXIOS ERROR Layerboard.vue');\r\n      });\r\n    },\r\n    computed: {\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      shouldLoadCyclomediaWidget() {\r\n        return this.$config.cyclomedia.enabled && !this.isMobileOrTablet;\r\n      },\r\n      shouldLoadPictometryWidget() {\r\n        return this.$config.pictometry.enabled && !this.isMobileOrTablet;\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      cyclomediaActive() {\r\n        return this.$store.state.cyclomedia.active\r\n      },\r\n      cycloLatlng() {\r\n        if (this.$store.state.cyclomedia.orientation.xyz !== null) {\r\n          const xyz = this.$store.state.cyclomedia.orientation.xyz;\r\n          return [xyz[1], xyz[0]];\r\n        } else {\r\n          const center = this.$config.map.center;\r\n          return center;\r\n        }\r\n      },\r\n      cycloRotationAngle() {\r\n        return this.$store.state.cyclomedia.orientation.yaw * (180/3.14159265359);\r\n      },\r\n      cycloHFov() {\r\n        return this.$store.state.cyclomedia.orientation.hFov;\r\n      },\r\n      pictometryActive() {\r\n        return this.$store.state.pictometry.active\r\n      },\r\n      pictometryZoom() {\r\n        return this.$store.state.pictometry.zoom\r\n      },\r\n      pictometryShowAddressMarker() {\r\n        if (!this.pictometryActive || !this.geocodeData) {\r\n          return false;\r\n        } else if (this.pictometryZoom < 20 && this.cyclomediaActive) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n      geocodeData() {\r\n        return this.$store.state.geocode.data\r\n      },\r\n      ak() {\r\n        const host = window.location.hostname;\r\n        if (host === 'atlas.phila.gov') {\r\n          return this.$config.pictometry.apiKey;\r\n        }\r\n        if (host === 'atlas-dev.phila.gov') {\r\n          return this.$config.pictometryDev.apiKey;\r\n        }\r\n        if (host === 'cityatlas.phila.gov') {\r\n          return this.$config.pictometryCity.apiKey;\r\n        }\r\n        if (host === 'cityatlas-dev.phila.gov') {\r\n          return this.$config.pictometryCityDev.apiKey;\r\n        }\r\n        if (host === '10.8.101.67') {\r\n          return this.$config.pictometryLocal.apiKey;\r\n        }\r\n      },\r\n      sk() {\r\n        const host = window.location.hostname;\r\n        if (host === 'atlas.phila.gov') {\r\n          return this.$config.pictometry.secretKey;\r\n        }\r\n        if (host === 'atlas-dev.phila.gov') {\r\n          return this.$config.pictometryDev.secretKey;\r\n        }\r\n        if (host === 'cityatlas.phila.gov') {\r\n          return this.$config.pictometryCity.secretKey;\r\n        }\r\n        if (host === 'cityatlas-dev.phila.gov') {\r\n          return this.$config.pictometryCityDev.secretKey;\r\n        }\r\n        if (host === '10.8.101.67') {\r\n          return this.$config.pictometryLocal.secretKey;\r\n        }\r\n      },\r\n      geocodeData() {\r\n        return this.$store.state.geocode.data\r\n      },\r\n      windowWidth() {\r\n        return this.$store.state.windowWidth;\r\n      },\r\n      windowHeight() {\r\n        return this.$store.state.windowSize.height;\r\n      },\r\n      didToggleTopicsOn() {\r\n        return this.$store.state.didToggleTopicsOn;\r\n      },\r\n      buttonMessage() {\r\n        if (this.didToggleTopicsOn) {\r\n          return 'See Map';\r\n        } else {\r\n          return 'See Datasets';\r\n        }\r\n      },\r\n      shouldShowTopics() {\r\n        return this.$store.state.shouldShowTopics;\r\n      },\r\n      shouldShowMap() {\r\n        return this.$store.state.shouldShowMap;\r\n      }\r\n    },\r\n    watch: {\r\n      pictometryShowAddressMarker(nextValue) {\r\n        // console.log('watch pictometryShowAddressMarker', nextValue);\r\n      },\r\n      windowWidth(nextWidth) {\r\n        this.calculateShouldShowTopics();\r\n        this.calculateShouldShowMap();\r\n      },\r\n      fullScreenMapEnabled(nextValue) {\r\n        this.calculateShouldShowTopics();\r\n        this.calculateShouldShowMap();\r\n      },\r\n      didToggleTopicsOn(nextValue) {\r\n        this.calculateShouldShowTopics();\r\n        this.calculateShouldShowMap();\r\n      },\r\n      shouldShowTopics(nextValue) {\r\n        this.handleWindowResize();\r\n      },\r\n      shouldShowMap(nextValue) {\r\n        this.handleWindowResize();\r\n      }\r\n    },\r\n    methods: {\r\n      // for mobile only\r\n      toggleTopics() {\r\n        const prevVal = this.$store.state.didToggleTopicsOn;\r\n        this.$store.commit('setDidToggleTopicsOn', !prevVal);\r\n      },\r\n      calculateShouldShowTopics() {\r\n        const windowWidth = this.windowWidth;\r\n        const smallScreen = windowWidth < 750;\r\n        const didToggleTopicsOn = this.$store.state.didToggleTopicsOn;\r\n        const fullScreenMapEnabled = this.$store.state.fullScreenMapEnabled;\r\n        // console.log('calculateShouldShowTopics, smallScreen:', smallScreen, 'didToggleTopicsOn', didToggleTopicsOn, 'fullScreenMapEnabled', fullScreenMapEnabled);\r\n        const shouldShowTopics = !smallScreen && !fullScreenMapEnabled || smallScreen && didToggleTopicsOn;\r\n        this.$store.commit('setShouldShowTopics', shouldShowTopics);\r\n      },\r\n      calculateShouldShowMap() {\r\n        const windowWidth = this.windowWidth;\r\n        const notMobile = windowWidth > 750;\r\n        const didToggleTopicsOn = this.$store.state.didToggleTopicsOn;\r\n        const shouldShowMap = notMobile || !didToggleTopicsOn;\r\n        this.$store.commit('setShouldShowMap', shouldShowMap);\r\n      },\r\n      handleWindowResize() {\r\n        const rootElement = document.getElementById('mb-root');\r\n        const rootStyle = window.getComputedStyle(rootElement);\r\n        // const rootHeight = rootStyle.getPropertyValue('height');\r\n        // const rootHeightNum = parseInt(rootHeight.replace('px', ''));\r\n        const rootHeightNum = 100;\r\n        const rootWidth = rootStyle.getPropertyValue('width');\r\n        const rootWidthNum = parseInt(rootWidth.replace('px', ''));\r\n        // let boardHeight;\r\n        const windowWidth = rootWidthNum;\r\n        const notMobile = windowWidth >= 640;\r\n        // console.log('handleWindowResize is running, windowWidth:', windowWidth, 'notMobile:', notMobile, 'this.$store.state.shouldShowTopics:', this.$store.state.shouldShowTopics);\r\n        // if (!notMobile) {\r\n        //   boardHeight = rootHeightNum - 34;\r\n        //   console.log('subtracting 34, rootHeightNum:', rootHeightNum, 'boardHeight:', boardHeight);\r\n        // } else {\r\n        //   boardHeight = rootHeightNum\r\n        //   // console.log('NOT subtracting 34, rootHeightNum:', rootHeightNum, 'boardHeight:', boardHeight);\r\n        // }\r\n        // this.styleObject.height = boardHeight.toString() + 'px';\r\n\r\n        // const obj = {\r\n        //   height: rootHeightNum,\r\n        //   width: rootWidthNum\r\n        // }\r\n        this.$store.commit('setWindowWidth', rootWidthNum);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  /*don't highlight any form elements*/\r\n  input:focus,\r\n  select:focus,\r\n  textarea:focus,\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n\r\n  /* standards applies padding to buttons, which causes some weirdness with\r\n  buttons on the map panel. override here. */\r\n  button {\r\n    padding: inherit;\r\n  }\r\n\r\n  .mb-root {\r\n    position: absolute;\r\n    bottom: 0;\r\n    top: 78px;\r\n    left: 0;\r\n    right: 0;\r\n    overflow: auto;\r\n  }\r\n\r\n  .datasets-button {\r\n    display: none;\r\n    margin: 0;\r\n  }\r\n\r\n  .mb-panel {\r\n    height: 100%;\r\n  }\r\n\r\n  /*.mb-panel-topics-with-widget {\r\n    height: 50%;\r\n  }*/\r\n\r\n  /*small devices only*/\r\n  /* @media screen and (max-width: 39.9375em) { */\r\n  @media screen and (max-width: 750px) {\r\n    .datasets-button {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  /* Medium and up */\r\n  /* @media screen and (min-width: 40em) {\r\n\r\n  } */\r\n\r\n  /* Medium only */\r\n  /* @media screen and (min-width: 40em) and (max-width: 63.9375em) {\r\n\r\n  } */\r\n\r\n  /* Large and up */\r\n  /* @media screen and (min-width: 64em) {\r\n\r\n  } */\r\n\r\n  /* Large only */\r\n  /* @media screen and (min-width: 64em) and (max-width: 74.9375em) {\r\n\r\n  } */\r\n\r\n</style>\r\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'info-circle';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f05a';\nvar svgPathData = 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faInfoCircle = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'check-square';\nvar width = 448;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f14a';\nvar svgPathData = 'M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faCheckSquare = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'filter';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f0b0';\nvar svgPathData = 'M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faFilter = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fal';\nvar iconName = 'square';\nvar width = 448;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f0c8';\nvar svgPathData = 'M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm16 400c0 8.8-7.2 16-16 16H48c-8.8 0-16-7.2-16-16V80c0-8.8 7.2-16 16-16h352c8.8 0 16 7.2 16 16v352z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faSquare = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","/*\r\n.____                             ___.                          .___\r\n|    |   _____  ___.__. __________\\_ |__   _________ _______  __| _/\r\n|    |   \\__  \\<   |  |/ __ \\_  __ \\ __ \\ /  _ \\__  \\\\_  __ \\/ __ |\r\n|    |___ / __ \\\\___  \\  ___/|  | \\/ \\_\\ (  <_> ) __ \\|  | \\/ /_/ |\r\n|_______ (____  / ____|\\___  >__|  |___  /\\____(____  /__|  \\____ |\r\n        \\/    \\/\\/         \\/          \\/           \\/           \\/\r\n*/\r\n\r\nimport Vue from 'vue';\r\nimport axios from 'axios';\r\nimport createStore from './store';\r\nimport configMixin from './util/config-mixin';\r\nimport Layerboard from './components/Layerboard.vue';\r\nimport mergeDeep from './util/merge-deep';\r\n\r\n// Font Awesome Icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faInfoCircle } from '@fortawesome/pro-solid-svg-icons/faInfoCircle';\r\nimport { faCheckSquare } from '@fortawesome/pro-solid-svg-icons/faCheckSquare';\r\nimport { faFilter } from '@fortawesome/pro-solid-svg-icons/faFilter';\r\nimport { faSquare } from '@fortawesome/pro-light-svg-icons/faSquare';\r\nlibrary.add(faInfoCircle, faCheckSquare, faFilter, faSquare);\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\r\n\r\nimport philaVueDatafetch from '@cityofphiladelphia/phila-vue-datafetch';\r\nconst controllerMixin = philaVueDatafetch.controllerMixin;\r\n\r\nfunction initOpenMaps(clientConfig) {\r\n  const baseConfigUrl = clientConfig.baseConfig;\r\n\r\n  // get base config\r\n  return axios.get(baseConfigUrl).then(response => {\r\n    const data = response.data;\r\n    const baseConfigFn = eval(data);\r\n    const { gatekeeperKey } = clientConfig;\r\n    const baseConfig = baseConfigFn({ gatekeeperKey });\r\n\r\n    // deep merge base config and client config\r\n    const config = mergeDeep(baseConfig, clientConfig);\r\n\r\n    // make config accessible from each component via this.$config\r\n    Vue.use(configMixin, config);\r\n\r\n    // create store\r\n    const store = createStore(config);\r\n\r\n    // mix in controller\r\n    Vue.use(controllerMixin, { config, store });\r\n\r\n    Vue.component('font-awesome-icon', FontAwesomeIcon)\r\n\r\n    // mount main vue\r\n    const vm = new Vue({\r\n      el: config.el || '#layerboard',\r\n      render: (h) => h(Layerboard),\r\n      store\r\n    });\r\n\r\n  }, response => {\r\n    console.error('AXIOS ERROR loading base config');\r\n  });\r\n}\r\n\r\nexport default initOpenMaps;\r\n\r\nexport { Layerboard };\r\n"],"sourceRoot":""}